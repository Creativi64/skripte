<html>
<head>
<META http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title>Galileo Computing :: C von A bis Z &ndash; 15.2 Initialisierung und Zugriff auf Strukturen</title>
<meta name="title" content="Galileo Computing :: C von A bis Z - 15.2 Initialisierung und Zugriff auf Strukturen">
<meta name="author" content="J&uuml;rgen Wolf ">
<meta name="publisher" content="Galileo Press 2009">
<meta name="copyright" content="Galileo Press 2009">
<meta name="Description" content="C von A bis Z - Das umfassende Handbuch &ndash; 15.2 Initialisierung und Zugriff auf Strukturen">
<meta name="audience" content="Alle">
<meta name="robots" content="INDEX,FOLLOW">
<meta http-equiv="content-language" content="de">
<link rel="stylesheet" type="text/css" href="common/galileo_open.css">
<link rel="prev" href="015_c_strukturen_001.htm">
<link rel="next" href="015_c_strukturen_003.htm"><script type="text/javascript"><!--
    function OpenWin(url,name,height,width)
    {
      var InfoWin = window.open(url,name,"directories=0,height="+height+",width=" + width + ",hotkeys=0,location=0,menubar=0,resizable=1,screenX=150,screenY=10,left=150,top=10,scrollbars=1,status=1,titlebar=0,toolbar=0");
      InfoWin.focus();
    }
    //--></script><link href="common/prettify.css" type="text/css" rel="stylesheet"><script type="text/javascript" src="common/prettify.js"></script></head>
<body vlink="#000099" link="#000099" alink="#000099" onload="prettyPrint()">
<table width="100%" border="0" cellpadding="0" cellspacing="0" bgcolor="#000066">
<tr>
<td height="74" valign="bottom" colspan="2"><a href="http://www.galileocomputing.de/katalog/openbook?GPP=opc3"><img src="common/galileocomputing_openbook.gif" width="200" height="56" border="0" alt="Galileo Computing < openbook >" title="Galileo Computing < openbook >"></a></td>
<td width="80" height="74"><a href="http://www.galileocomputing.de/?GPP=opc3"><img src="common/galileocomputing.gif" border="0" alt="Galileo Computing - Professionelle Bücher. Auch für Einsteiger." title="Galileo Computing - Professionelle Bücher. Auch für Einsteiger."></a></td>
</tr>
</table>
<div align="right"><a href="http://www.galileocomputing.de/?GPP=opc3" class="navnav">Professionelle Bücher. Auch für Einsteiger.</a></div><br><table class="tbl" border="0" cellpadding="0" cellspacing="0" width="100%">
<tr>
<td width="190" valign="top">
<table class="tbl1" border="0" cellpadding="3" cellspacing="0" width="190" align="left">
<tr>
<td class="tbl2"><a class="nav" href="index.htm#_top">Inhaltsverzeichnis</a></td>
</tr>
<tr>
<td><a class="navnav" href="000_c_vorwort_001.htm#mj764cb3fd439d3b95d1843e7c7d17f235">Vorwort</a></td>
</tr>
<tr>
<td><a class="navnav" href="000_c_vorwort_gutachter_001.htm#mj3d41cb339c9b2fc1d6e99cdaa93c3860">Vorwort des Gutachters</a></td>
</tr>
<tr>
<td><a class="navnav" href="001_c_einstieg_in_c_001.htm#mja24d93ff97bb42dbebf4689160c45195">1 Einstieg in C</a></td>
</tr>
<tr>
<td><a class="navnav" href="002_c_das_erste_programm_001.htm#mj2604a667cc98d3fa2178751273346b91">2 Das erste Programm</a></td>
</tr>
<tr>
<td><a class="navnav" href="003_c_grundlagen_001.htm#mj7ac54ba315b94149806c1de3fc89ee7f">3 Grundlagen</a></td>
</tr>
<tr>
<td><a class="navnav" href="004_c_ein_ausgabe_001.htm#mj20c131820fbfb1497afd796ee443599e">4 Formatierte Ein-/Ausgabe mit »scanf()« und »printf()«</a></td>
</tr>
<tr>
<td><a class="navnav" href="005_c_basisdatentypen_001.htm#mjeda2957449ddc812dad62b400fe57752">5 Basisdatentypen</a></td>
</tr>
<tr>
<td><a class="navnav" href="006_c_operatoren_001.htm#mjab3693b096d581607801a36ce88905fc">6 Operatoren</a></td>
</tr>
<tr>
<td><a class="navnav" href="007_c_typumwandlung_001.htm#mj5c5e497ac2ab4367fe9df0ffd218cfca">7 Typumwandlung</a></td>
</tr>
<tr>
<td><a class="navnav" href="008_c_kontrollstrukturen_001.htm#mjc7bf6f584a2fe20b4c5f6b16ba15d57d">8 Kontrollstrukturen</a></td>
</tr>
<tr>
<td><a class="navnav" href="009_c_funktionen_001.htm#mj7893101be51aa469fe52334038acd465">9 Funktionen</a></td>
</tr>
<tr>
<td><a class="navnav" href="010_c_praeprozessor_001.htm#mjacdd200a20163a4d3fa418b6cb95763e">10 Präprozessor-Direktiven</a></td>
</tr>
<tr>
<td><a class="navnav" href="011_c_arrays_001.htm#mje29de26c54a3884f7316cbbb2a073ad8">11 Arrays</a></td>
</tr>
<tr>
<td><a class="navnav" href="012_c_zeiger_001.htm#mjee28a882ef9125d2c4cc49121b2c65c1">12 Zeiger (Pointer)</a></td>
</tr>
<tr>
<td><a class="navnav" href="013_c_kommandozeilenargumente_001.htm#mjf6a9e42fa3bc25b2b1e06270e7bf8f68">13 Kommandozeilenargumente</a></td>
</tr>
<tr>
<td><a class="navnav" href="014_c_dyn_speicherverwaltung_001.htm#mj8d062301d2449b13710f1484d499cd9b">14 Dynamische Speicherverwaltung</a></td>
</tr>
<tr>
<td><a class="navh" href="##mj5e146ba18168113a5c645cd2d07c4ec8">15 Strukturen</a></td>
</tr>
<tr>
<td><a class="navnav" href="016_c_ein_ausgabe_funktionen_001.htm#mj136f9ac6b5b7c440aafe5010411ef011">16 Ein-/Ausgabe-Funktionen</a></td>
</tr>
<tr>
<td><a class="navnav" href="017_c_dateien_verzeichnisse_001.htm#mj9f81aea722a9edb8d0080df81eb9402c">17 Attribute von Dateien und das Arbeiten mit Verzeichnissen (nicht ANSI C)</a></td>
</tr>
<tr>
<td><a class="navnav" href="018_c_stdarg_h_001.htm#mj9d64febdc46a1375e5c4498b17154e30">18 Arbeiten mit variabel langen Argumentlisten &#8211; &lt;stdarg.h&gt;</a></td>
</tr>
<tr>
<td><a class="navnav" href="019_c_zeitroutinen_001.htm#mj0a8102e96a1297bd767ac7274e069f0f">19 Zeitroutinen</a></td>
</tr>
<tr>
<td><a class="navnav" href="020_c_headerdateien_001.htm#mjf3caede8ebd504dc6b7454b297c251e8">20 Weitere Headerdateien und ihre Funktionen (ANSI C)</a></td>
</tr>
<tr>
<td><a class="navnav" href="021_c_dyn_datenstrukturen_001.htm#mja75ba2f4ab8f95e9e321d195c1e26d76">21 Dynamische Datenstrukturen</a></td>
</tr>
<tr>
<td><a class="navnav" href="022_c_algorithmen_001.htm#mj07afe6f332eab2e8168da2f69f7b31c4">22 Algorithmen</a></td>
</tr>
<tr>
<td><a class="navnav" href="023_c_cgi_001.htm#mj6c4219b4e615fa24deaa57d5c3d04db8">23 CGI mit C</a></td>
</tr>
<tr>
<td><a class="navnav" href="024_c_mysql_001.htm#mj12dab301033f9fd856aa739270c45e08">24 MySQL und C</a></td>
</tr>
<tr>
<td><a class="navnav" href="025_c_netzwerkprogrammierung_001.htm#mja8101c6e0e4cb2e6fd8312114dad30d7">25 Netzwerkprogrammierung und Cross&ndash;Plattform-Entwicklung</a></td>
</tr>
<tr>
<td><a class="navnav" href="026_c_paralleles_rechnen_001.htm#mj710dc0ad851d57e60533f8797ff9c1e6">26 Paralleles Rechnen</a></td>
</tr>
<tr>
<td><a class="navnav" href="027_c_sicheres_programmieren_001.htm#mj13eba8f9d68ac8414bffaa3a1b24ec31">27 Sicheres Programmieren</a></td>
</tr>
<tr>
<td><a class="navnav" href="028_c_weiterfuehrendes_001.htm#mj3e65f750149ade087925f303b3871af9">28 Wie geht&#8217;s jetzt weiter?</a></td>
</tr>
<tr>
<td><a class="navnav" href="029_c_anhang_a_001.htm#mjec9bf1c5e3fe2e46047c2f9c7aa9c531">A Operatoren</a></td>
</tr>
<tr>
<td><a class="navnav" href="030_c_anhang_b_001.htm#mj803443bb6e7546011c48e6e57fbdbb64">B Die C-Standard-Bibliothek</a></td>
</tr>
<tr>
<td><a class="navnav" href="stichwort.htm#_top">Stichwort</a></td>
</tr>
<tr>
<td><br><a href="http://download.galileo-press.de/openbook/c_von_a_bis_z/galileocomputing_c_von_a_bis_z.zip" class="navnav"><strong>Download:</strong><br>- ZIP, ca. 10,6 MB</a></td>
</tr>
<tr>
<td><a href="http://www.galileocomputing.de/2132?GPP=opc3" class="navnav">Buch bestellen</a></td>
</tr>
<tr>
<td><a class="navnav" href="#kommentar">Ihre Meinung?</a><br><br></td>
</tr>
</table>
</td>
<td width="10"><img src="common/spacer10.gif" width="10" height="10" alt="Spacer"></td>
<td width="85%" valign="top" align="center"><div align="center">
<table width="98%" border="0" cellspacing="0" cellpadding="0" bgcolor="#FFFFFF">
<tr>
<td width="100%" class="start" colspan="1" height="22" align="center"><table width="100%" border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="25%"><a href="015_c_strukturen_001.htm" class="navnav"> &lt;&lt;   zurück</a></td>
<td width="49%"><div align="center"><a href="http://www.galileocomputing.de/?GPP=opc3" class="navnav">Galileo Computing</a> / <a href="http://www.galileocomputing.de/katalog/openbook/?GPP=opc3" class="navnav">&lt;openbook&gt;</a> / <a href="index.htm" class="navnav"> C von A bis Z</a></div></td>
<td align="right" width="25%"><div align="right"><a href="015_c_strukturen_003.htm" class="navnav">vor   &gt;&gt; </a></div></td>
</tr>
</table></td>
</tr>
<tr>
<td width="100%" valign="top"><table width="100%" border="0" cellpadding="10" cellspacing="0" class="box">
<tr>
<td colspan="2"><a href="http://www.galileocomputing.de/2132?GPP=opc3" class="buchtitel">C von A bis Z</a><span class="autor"> von J&uuml;rgen Wolf </span><br><span class="untertitel">Das umfassende Handbuch</span></td>
</tr>
<tr>
<td valign="top" width="211"><dl>
<dt><a href="http://www.galileocomputing.de/2132?GPP=opc3" class="navnav"><img src="common/9783836214117.gif" border="0" alt="Buch: C von A bis Z" title="Buch: C von A bis Z"></a></dt>
<dd><br><a href="http://www.galileocomputing.de/2132?GPP=opc3"><span class="autor"><strong>C von A bis Z</strong><br>3., aktualisierte und erweiterte Auflage, geb., mit CD und Referenzkarte<br>1.190 S., 39,90 Euro<br>Galileo Computing<br>ISBN 978-3-8362-1411-7</span></a></dd>
</dl></td>
<td width="80%"><table border="0">
<tr>
<td valign="baseline"><img src="common/pfeil_u.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="3" class="kap"><strong><a href="015_c_strukturen_001.htm#mj5e146ba18168113a5c645cd2d07c4ec8" class="navnav">15 Strukturen</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="015_c_strukturen_001.htm#mj5746e9498f0b42b5da5195dd8d304f5a" class="navnav">15.1 Struktur deklarieren</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="#mjd4e56d29fc8197ecf142897054517996" class="navh">15.2 Initialisierung und Zugriff auf Strukturen</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="015_c_strukturen_003.htm#mj5db2bd787482bd929c5e321891a6d042" class="navnav">15.3 Strukturen als Wertübergabe an eine Funktion</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="015_c_strukturen_004.htm#mjf0db0a41c8d7f11d8a8fa4f92433b986" class="navnav">15.4 Strukturen als Rückgabewert einer Funktion</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="015_c_strukturen_005.htm#mj690ceaadd170181a825217f1528a0056" class="navnav">15.5 Strukturen vergleichen</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="015_c_strukturen_006.htm#mj558e0e4fc0892fc3f91cd810f7c07860" class="navnav">15.6 Arrays von Strukturen</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="015_c_strukturen_007.htm#mjbab204931f0ac95af858355cf81e6bd5" class="navnav">15.7 Strukturen in Strukturen (Nested Structures)</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="015_c_strukturen_008.htm#mj8bfb506f0c4b39cf342201743b62f422" class="navnav">15.8 Kurze Zusammenfassung zu den Strukturen</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="015_c_strukturen_009.htm#mj9e030e6d45f3619a80b6814a2ba14bea" class="navnav">15.9 Unions</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="015_c_strukturen_010.htm#mj259bc5aff9087f7c3548408b56b74318" class="navnav">15.10 Der Aufzählungstyp »enum«</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="015_c_strukturen_011.htm#mjccb5a85ebc674dd49050598bbc9b7627" class="navnav">15.11 Typendefinition mit »typedef«</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="015_c_strukturen_012.htm#mj94f54125b03d214b3f10816feef043dc" class="navnav">15.12 Attribute von Strukturen verändern (nicht ANSI C)</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="015_c_strukturen_013.htm#mj2f57db5965c2ac0ab2c8d3d97f038272" class="navnav">15.13 Bitfelder</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="015_c_strukturen_014.htm#mjcf48a74fc6a32108952fa69f8833c964" class="navnav">15.14 Das »offsetof«-Makro</a></strong></td>
</tr>
</table><br></td>
</tr>
</table>
<table width="100%" cellpadding="20" cellspacing="0" border="0" bgcolor="#eeeeee">
<tr>
<td><div class="main"><a id="mjd4e56d29fc8197ecf142897054517996" name="mjd4e56d29fc8197ecf142897054517996"></a><a name="t21"></a><a name="t2t31"></a><br><div align="center"><a href="#top"><img src="common/jupiters.gif" border="0" alt="Galileo Computing - Zum Seitenanfang"></a></div>
<h2 class="t2"><span class="cfett">15.2</span><span class="cfett"> Initialisierung und Zugriff auf Strukturen</span>  <img src="common/15x15leer.gif" width="15" height="15" border="0" alt="top"><img src="common/15x15leer.gif" width="15" height="15" border="0" alt="Zur vorigen Überschrift"></h2>
<p>Auf die einzelnen Variablen einer Struktur greifen Sie mithilfe des Punktoperators (<span class="clisting">.</span>) zu. Ansonsten erfolgen die Initialisierung und der Zugriff wie bei normalen Variablen. Beispielsweise:</p>
<div class="listing"><pre class="prettyprint">/* struct1.c */
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;

struct index {
   int seite;
   char titel[30];
};

int main(void) {
   struct index lib;

   lib.seite = 23;
   strcpy(lib.titel, "C-Programmieren");
   printf("%d, %s\n",lib.seite, lib.titel);
   return EXIT_SUCCESS;
}</pre></div>
<div class="bildbox">
<p><a name="IDAOEUQ"></a><a onClick="OpenWin('bilder/15_002.gif','Abbildung',800,800)"><img border="0" src="bilderklein/klein15_002.gif" alt="Abbildung"><br><span class="tabunter">Hier klicken, um das Bild zu vergrößern</span></a></p>
</div>
<p class="tabunter"><strong>Abbildung 15.2    </strong>Strukturelemente wurden mit Werten initialisiert.</p>
<p>Mit</p>
<div class="listing"><pre class="prettyprint">struct index lib;</pre></div>
<p>wird eine Struktur mit der Bezeichnung <span class="clisting">lib</span> vom Typ <span class="clisting">index</span> deklariert. Diese Extra-Deklaration hätten Sie auch mit folgender Schreibweise erzielt:</p>
<div class="listing"><pre class="prettyprint">struct index {
   int seite;
   char titel[30];
} lib;</pre></div>
<p>Wenn Sie den Typnamen dieser Struktur nicht benötigen, kann sie auch ohne deklariert werden:</p>
<div class="listing"><pre class="prettyprint">struct {
   int seite;
   char titel[30];
} lib;</pre></div>
<p>Es spricht auch nichts dagegen, mehrere Typen auf einmal zu deklarieren:</p>
<div class="listing"><pre class="prettyprint">struct index {
   int seite;
   char titel[30];
} lib1, lib2, lib3;</pre></div>
<p>Hiermit wurden drei Variablen vom Typ <span class="clisting">index</span> deklariert. Strukturen können natürlich ebenso wie normale Datentypen direkt bei der Deklaration mit Werten initialisiert werden:</p>
<div class="listing"><pre class="prettyprint">struct index {
   int seite;
   char titel[30];
} lib = { 308, "Strukturen" };</pre></div>
<p>Oder auch bei der Deklaration in der <span class="clisting">main()</span>-Funktion:</p>
<div class="listing"><pre class="prettyprint">struct index lib = { 55, "Einführung in C" };</pre></div>
<p>Zur Demonstration folgt ein Listing, das zeigt, wie Sie auf den Inhalt einer Struktur zugreifen können:</p>
<div class="listing"><pre class="prettyprint">/* struct2.c */
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#define MAX 30

struct adres {
   char vname[MAX];
   char nname[MAX];
   long PLZ;
   char ort[MAX];
   int geburtsjahr;
} adressen;

/* Funktion zur Ausgabe des Satzes */
void ausgabe(struct adres x) {
   printf("\n\nSie gaben ein:\n\n");
   printf("Vorname.........:%s",   x.vname);
   printf("Nachname........:%s",   x.nname);
   printf("Postleitzahl....:%ld\n",x.PLZ);
   printf("Ort.............:%s",   x.ort);
   printf("Geburtsjahr.....:%d\n", x.geburtsjahr);
}

int main(void) {
   printf("Vorname      : ");
   fgets(adressen.vname, MAX, stdin);
   printf("Nachname     : ");
   fgets(adressen.nname, MAX, stdin);
   printf("Postleitzahl : ");
   do {
      scanf("%5ld",&amp;adressen.PLZ);
   } while(getchar()!= '\n');
   printf("Wohnort      : ");
   fgets(adressen.ort, MAX, stdin);
   printf("Geburtsjahr  : ");
   do {
      scanf("%4d",&amp;adressen.geburtsjahr);
   } while(getchar()!='\n' );

   ausgabe(adressen);
   return EXIT_SUCCESS;
}</pre></div>
<div class="bildbox">
<p><a name="IDAVQUQ"></a><a onClick="OpenWin('bilder/15_003.gif','Abbildung',800,800)"><img border="0" src="bilderklein/klein15_003.gif" alt="Abbildung"><br><span class="tabunter">Hier klicken, um das Bild zu vergrößern</span></a></p>
</div>
<p class="tabunter"><strong>Abbildung 15.3    </strong>Einlesen und Ausgeben von Strukturen</p>
<p>Die erste Eingabe in der <span class="clisting">main()</span>-Funktion lautet:</p>
<div class="listing"><pre class="prettyprint">fgets(adressen.vname, MAX, stdin);</pre></div>
<p>Damit wird der Vorname eingelesen. Der Zugriff erfolgt über den Namen der Struktur, gefolgt vom Punktoperator. Dahinter folgt das entsprechende Strukturelement, das diese Daten erhalten soll. Dies funktioniert genauso, wenn Sie einen String direkt mit der Funktion <span class="clisting">strcpy()</span> in ein Strukturelement einkopieren wollen:</p>
<div class="listing"><pre class="prettyprint">strcpy(adressen.vname , "Tux");</pre></div>
<p>Die direkte Initialisierung numerischer Werte an Strukturelementen lässt sich ebenfalls variablentypisch durchführen:</p>
<div class="listing"><pre class="prettyprint">adressen.PLZ = 89000;</pre></div>
<p>Wenn Sie alle Strukturelemente eingegeben haben, wird die Funktion <span class="clisting">ausgabe()</span> aufgerufen:</p>
<div class="listing"><pre class="prettyprint">ausgabe(adressen);</pre></div>
<p>Als Argument erhält diese Funktion die Struktur <span class="clisting">adressen</span>. Danach werden die einzelnen Elemente der Struktur auf dem Bildschirm ausgegeben.</p>
<p>Eine weitere Möglichkeit, die Struktur im Listing sofort mit einem Inhalt zu initialisieren, ist diese:</p>
<div class="listing"><pre class="prettyprint">stuct adres {
   char vname[20];
   char nname[20];
   long PLZ;
   char ort[20];
   int geburtsjahr;
} adressen = {"Ernest", "Hemming" ,3434, "Havanna" ,1913};</pre></div>
<p>Folgende Wertzuweisung von Strukturen sollten Sie allerdings vermeiden:</p>
<div class="listing"><pre class="prettyprint">struct {
   int a1;
   int a2;
   int a3;
} werte1, werte2;

werte1.a1 = 8;
werte1.a2 = 16;
werte1.a3 = 32;

werte2 = werte1;   // Bitte vermeiden Sie solche Zuweisungen.</pre></div>
<p>Das ist in C zwar erlaubt, kann aber zu Fehlern führen, wenn ein Compiler dies nicht unterstützt. Sicherer wäre die folgende Möglichkeit:</p>
<div class="listing"><pre class="prettyprint">memcpy(&amp;werte2, &amp;wert1, sizeof(werte1));</pre></div>
<p>Dies soll nur ein Hinweis sein und keine Vorschrift!</p>
<p>Es folgt ein kleiner Tipp, wie Sie sich die Strukturen vielleicht noch besser vorstellen können. Als Vergleich dienen dazu die Variablen <span class="clisting">int x</span> und <span class="clisting">char c</span> (siehe Tabelle 15.1).</p><br><table width="100%" border="0" cellspacing="1" cellpadding="3">
<caption class="tabunter"><p class="ptabunter"><strong>Tabelle 15.1    </strong>Strukturen im Vergleich mit Standard-Datentypen</p>
</caption>
<tr>
<td class="tabellenkopf"><span class="cfett">Typ</span>
</td>
<td class="tabellenkopf"><span class="cfett">Name</span>
</td>
</tr>
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">int</pre></div>
</td>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">x</pre></div>
</td>
</tr>
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">char</pre></div>
</td>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">c</pre></div>
</td>
</tr>
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">struct adres</pre></div>
</td>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">adressen</pre></div>
</td>
</tr>
</table><br><p>Wird die Variable <span class="clisting">x</span> mit einem Wert initialisiert, gehen Sie bekannterweise so vor:</p>
<div class="listing"><pre class="prettyprint">x = 1999;</pre></div>
<p>Bei einer Struktur kommt noch ein kleiner Zusatz hinzu:</p>
<div class="listing"><pre class="prettyprint">adressen.geburtsjahr = 1999;</pre></div>
<h4 class="t4"><span class="cfett">Bestimmte Elemente initialisieren</span></h4>
<p>Ab dem C99-Standard ist es auch möglich, nur bestimmte Elemente einer Struktur zu initialisieren. Als Initialisierer wird hierbei ein sogenannter Elementbezeichner verwendet. Verwenden wir beispielsweise nochmals folgende Struktur:</p>
<div class="listing"><pre class="prettyprint">stuct adres {
   char vname[20];
   char nname[20];
   long PLZ;
   char ort[20];
   int geburtsjahr;
};</pre></div>
<p>Sind Ihnen in diesem Fall z. B. nur die Angaben zum Nachnamen und Ort bekannt, können Sie folgendermaßen die Elemente <span class="clisting">nname</span> und <span class="clisting">ort</span> initialisieren:</p>
<div class="listing"><pre class="prettyprint">struct adres adressen = {
   .nname = "Wolf",
   .ort   = "Mering"
};</pre></div>
<p>Um also bestimmte Elemente in einer Struktur zu initialisieren, sieht der Elementebezeichner für ein Strukturelement immer folgendermaßen aus:</p>
<div class="listing"><pre class="prettyprint">.strukturelement = wert  // Elementbezeichner</pre></div>
<p>Selbst auf die Reihenfolge müssen Sie hierbei nicht achten. Sie können also auch folgendermaßen bestimmte Elemente der Struktur mit dem Elementbezeichner initialisieren:</p>
<div class="listing"><pre class="prettyprint">struct adres adressen = {
   .ort   = "Mering",
   .PLZ   = 12345,
   .nname = "Wolf",
};</pre></div>
<p>Geben Sie die Elemente in der vorgegebenen Reihenfolge an, können Sie natürlich wieder auf dem Elementbezeichner verzichten. Kennen Sie beispielsweise in unserer Beispielstruktur den Vornamen, Nachnamen und den Wohnort, können Sie auf die Angaben von <span class="clisting">.vname</span> und <span class="clisting">.nname</span> verzichten, weil diese jeweils das erste und zweite Element in der Struktur sind. Erst für <span class="clisting">.ort</span> benötigen Sie wieder einen Elementbezeichner. Hier das Beispiel:</p>
<div class="listing"><pre class="prettyprint">struct adres adressen = {
   "Jürgen",         // geht automatisch an vname
   "Wolf",           // geht automatisch an nname
   .ort = "Mering"   // nötig, weil das 3. Element PLZ ist
};</pre></div>
<p>Das funktioniert natürlich auch anders. Kennen Sie beispielsweise nur die Postleitzahlen, den Ort und das Geburtsjahr, brauchen Sie nur den Elementbezeichner von <span class="clisting">.PLZ</span> verwenden. Die restlichen beiden Angaben können Sie, in der richtigen Reihenfolge gesetzt, wieder ohne Elementbezeichner verwenden:</p>
<div class="listing"><pre class="prettyprint">struct adres adressen = {
   .PLZ    =  1234,
   "Mering",           // geht autmatisch an ort
   1974                // geht automatisch an geburtsjahr
};</pre></div>
<p>Zum Schluss stellt sich noch die Frage, was mit den Strukturelementen passiert, die nicht initialisiert wurden? Alle diese Elemente ohne einen Initialisierer bekommen automatisch den Wert 0. Hierzu folgt noch ein einfaches Beispiel, das die Möglichkeit demonstrieren soll, bestimmte Elemente einer Struktur zu initialisieren:</p>
<div class="listing"><pre class="prettyprint">/* struct_init_c99.c */
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#define MAX 30


struct adres {
   char vname[MAX];
   char nname[MAX];
   long PLZ;
   char ort[MAX];
   int geburtsjahr;
};

/*Funktion zur Ausgabe des Satzes*/
void ausgabe(struct adres x) {
   printf("\n\nSie gaben ein:\n\n");
   printf("Vorname.........:%s\n",   x.vname);
   printf("Nachname........:%s\n",   x.nname);
   printf("Postleitzahl....:%ld\n",x.PLZ);
   printf("Ort.............:%s\n",   x.ort);
   printf("Geburtsjahr.....:%d\n", x.geburtsjahr);
}

int main(void) {
   struct adres adressen1 = {
      "Jürgen",
      "Wolf",
      .ort   = "Mering"
   };

   struct adres adressen2 = {
      .ort   = "Mering",
      .PLZ   = 1234,
      .nname = "Wolf",
   };

   struct adres adressen3 = {
      .PLZ    = 1234,
      "Mering",
      1974
   };

   ausgabe(adressen1);
   ausgabe(adressen2);
   ausgabe(adressen3);
   return EXIT_SUCCESS;
}</pre></div><br><table width="100%" border="0" cellspacing="1" cellpadding="3">
<tr>
<td class="tabellenkopf"><span class="cfett">Hinweis</span>
</td>
</tr>
<tr>
<td class="tabellentext">
<p class="BStandard">Beim Testen des Beispiels muss man leider immer noch feststellen, dass einige Compiler-Hersteller sich nur bedingt um den C99-Standard scheren. Gerade bei großen Herstellern wie Microsoft und Borland ist es schon enttäuschend, dass diese immer noch nicht den kompletten C99-Standard implementiert haben. Bleibt nur zu hoffen, dass mit der 2010er-Version etwas Bewegung hereinkommt. Am besten schneidet der GNU-GCC-Compiler ab.</p>
</td>
</tr>
</table><br><br><hr><a name="kommentar"></a><h3>Ihr Kommentar</h3>
                       Wie hat Ihnen das &lt;openbook&gt; gefallen? Wir freuen uns immer über Ihre freundlichen und kritischen Rückmeldungen.
                       <form action="http://www.galileo-press.de/feedback/openbook" method="post" style="text-align: center; margin-top: 10px;"><input type="hidden" name="openbookurl" value="http://openbook.galileocomputing.de/c_von_a_bis_z/015_c_strukturen_002.htm"><input type="hidden" name="buchtitel" value="C von A bis Z"><input type="hidden" name="Kapitel" value="15.2 Initialisierung und Zugriff auf Strukturen"><table border="0">
<tr>
<td><label for="name">Name</label><br></td>
<td><input type="text" name="name" id="name" size="40"><br></td>
</tr>
<tr>
<td><label for="email">E-Mail</label><br></td>
<td><input type="text" name="email" id="email" size="40"><br></td>
</tr>
<tr>
<td valign="top"><label for="comment">Ihr Kommentar</label><br></td>
<td><textarea name="comment" id="comment" rows="10" cols="40"></textarea><br></td>
</tr>
<tr>
<td>
</td>
<td><input type="submit" value="Kommentar absenden"></td>
</tr>
</table>
</form>
</div></td>
</tr>
</table></td>
</tr>
<tr>
<td width="100%" class="start" colspan="1" height="22" align="center"><table width="100%" border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="25%"><a href="015_c_strukturen_001.htm" class="navnav"> &lt;&lt;   zurück</a></td>
<td width="49%"><div align="center"><a class="navnav" href="#">&lt;top&gt;</a></div></td>
<td align="right" width="25%"><div align="right"><a href="015_c_strukturen_003.htm" class="navnav">vor   &gt;&gt; </a></div></td>
</tr>
</table></td>
</tr>
</table>
</div></td>
<td width="10" valign="top">&nbsp;&nbsp;</td>
<td width="160" valign="top">
<table border="0" cellpadding="0" cellspacing="0" width="160">
<tr>
<td>
<table border="0" cellpadding="0" cellspacing="0" width="100%">
<tr>
<td class="tbl2" height="20" colspan="2">
&nbsp;<a href="http://www.galileocomputing.de/?GPP=opc3" class="nav">
<strong>Zum Katalog</strong></a>
</td>
</tr>
<tr>
<td valign="top" class="tbl2" width="2">
<img src="common/leer.gif" border="0" height="1" width="1"></td>
<td valign="top">
<table cellspacing="3">
<tr>
<td><a href="http://www.galileocomputing.de/2132?GPP=opc3">
<img src="common/9783836214117_s.gif" width="113" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: C von A bis Z" title="Zum Katalog: C von A bis Z">
<br /><br /><strong>&nbsp;C von A bis Z</strong><br /><img src="common/pfeil_rechts5.gif" border="0" alt="">Jetzt&nbsp;bestellen</a><br /><br />
</td>
</tr>
</table>
</td>
</tr>
</table>
</td>
</tr>
<tr>
<td><img src="common/leer.gif" height="2" width="1" border="0" /></td>
</tr>
<tr>
<td>
<table border="0" cellpadding="0" cellspacing="0" width="100%">
<tr>
<td class="tbl2" height="20" colspan="2"><a href="#kommentar" class="nav"><strong>&nbsp;Ihre Meinung?</strong></a>
</td>
</tr>
<tr>
<td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td>
<td valign="top">
<table cellspacing="3">
<tr>
<td>Wie hat Ihnen das &lt;openbook&gt; gefallen?<br /><a href="#kommentar"><img src="common/pfeil_rechts5.gif" border="0" alt="">Ihre Meinung</a>
<br /><br /></td>
</tr>
</table>
</td>
</tr>
</table>
</td>
</tr>
<tr>
<td><img src="common/leer.gif" height="2" width="1" border="0" /></td>
</tr>
<tr>
<td>
<table border="0" cellpadding="0" cellspacing="0" width="100%">
<tr>
<td class="tbl2" height="20" colspan="2">&nbsp;<a href="http://www.galileocomputing.de/?GPP=opc3" class="nav"><strong>Buchtipps</strong></a></td>
</tr>
<tr> 
<td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/2083?GPP=opc3">
<img src="common/9783836213851_s.gif" width="112" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Einstieg in C++" title="Zum Katalog: Einstieg in C++"><br /><br /><br /><br /><br /><br /><br />&nbsp;Einstieg in C++</a><br /><br /></td>
</tr>
<tr>
<td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/2156?GPP=opc3">
<img src="common/9783836214292_s.gif" width="113" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: C++ von A bis Z" title="Zum Katalog: C++ von A bis Z"><br /><br /><br /><br /><br /><br /><br />&nbsp;C++ von A bis Z</a><br /><br /></td>
</tr>
<tr>
<td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/1299?GPP=opc3">
<img src="common/9783898428392_s.gif" width="113" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: C/C++" title="Zum Katalog: C/C++"><br /><br /><br /><br /><br /><br /><br />&nbsp;C/C++</a><br /><br /></td>
</tr>
<tr>
<td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/1712?GPP=opc3">
<img src="common/9783836211574_s.gif" width="113" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Shell-Programmierung" title="Zum Katalog: Shell-Programmierung"><br /><br /><br /><br /><br /><br /><br />&nbsp;Shell-Programmierung</a><br /><br /></td>
</tr>
<tr>
<td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/2049?GPP=opc3">
<img src="common/9783836213660_s.gif" width="119" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Linux-UNIX-Programmierung" title="Zum Katalog: Linux-UNIX-Programmierung"><br /><br /><br /><br /><br /><br /><br />&nbsp;Linux-UNIX-<br />&nbsp;Programmierung</a><br /><br /></td>
</tr>
<tr>
<td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/2138?GPP=opc3">
<img src="common/9783836214209_s.gif" width="107" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: IT-Handbuch für Fachinformatiker" title="Zum Katalog: IT-Handbuch für Fachinformatiker"><br /><br /><br /><br /><br /><br /><br />&nbsp;IT-Handbuch für <br />&nbsp;Fachinformatiker</a><br /><br /></td>
</tr>
<tr>
<td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/2165?GPP=opc3">
<img src="common/9783836214391_s.gif" width="119" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Ubuntu GNU/Linux" title="Zum Katalog: Ubuntu GNU/Linux"><br /><br /><br /><br /><br /><br /><br />&nbsp;Ubuntu GNU/Linux</a><br /><br /></td>
</tr>
<tr>
<td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/1628?GPP=opc3">
<img src="common/9783836211161_s.gif" width="117" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Coding for Fun" title="Zum Katalog: Coding for Fun"><br /><br /><br /><br /><br /><br /><br /><br />&nbsp;Coding for Fun&nbsp;</a><br /><br /></td>
</tr>
</table></td>
</tr>
<tr>
<td><img src="common/leer.gif" height="2" width="1" border="0" /></td>
</tr>
<tr>
<td>
<table border="0" cellpadding="0" cellspacing="0" width="100%">
<tr>
<td class="tbl2" height="20" colspan="2"><strong>&nbsp;Shopping</strong></td>
</tr>
<tr>
<td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td>
<td valign="top">
<table cellspacing="3">
<tr>
<td><b>Versandkostenfrei</b> bestellen in Deutschland und &Ouml;sterreich<br /><a href="http://www.galileocomputing.de/hilfe/Shop/?GPP=opc3"><img src="common/pfeil_rechts5.gif" border="0" alt="Info">Info</a><br /><br /></td>
</tr>
</table>
</td>
</tr>
</table>
</td>
</tr>
</table>
</td>
</tr>
</table><br><br><hr width="70%" align="center">
<div align="center">
<p class="standard"><strong>Copyright © Galileo Press 2009</strong><br>
        Für Ihren privaten Gebrauch dürfen Sie die Online-Version natürlich ausdrucken.
        Ansonsten unterliegt das &lt;openbook&gt; denselben Bestimmungen, wie die
        gebundene Ausgabe: Das Werk einschließlich aller seiner Teile ist urheberrechtlich
        geschützt. Alle Rechte vorbehalten einschließlich der Vervielfältigung, Übersetzung,
        Mikroverfilmung sowie Einspeicherung und Verarbeitung in elektronischen Systemen.</p><br><a href="http://www.galileocomputing.de/">[Galileo Computing]</a><br><br>
      Galileo Press, Rheinwerkallee 4, 53227 Bonn, Tel.: 0228.42150.0, Fax 0228.42150.77, <a href="mailto:info@galileo-press.de">info@galileo-press.de</a></div><br><br></body>
</html>
