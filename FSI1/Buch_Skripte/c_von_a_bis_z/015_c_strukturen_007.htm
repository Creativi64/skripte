<html>
<head>
<META http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title>Galileo Computing :: C von A bis Z &ndash; 15.7 Strukturen in Strukturen (Nested Structures)</title>
<meta name="title" content="Galileo Computing :: C von A bis Z - 15.7 Strukturen in Strukturen (Nested Structures)">
<meta name="author" content="J&uuml;rgen Wolf ">
<meta name="publisher" content="Galileo Press 2009">
<meta name="copyright" content="Galileo Press 2009">
<meta name="Description" content="C von A bis Z - Das umfassende Handbuch &ndash; 15.7 Strukturen in Strukturen (Nested Structures)">
<meta name="audience" content="Alle">
<meta name="robots" content="INDEX,FOLLOW">
<meta http-equiv="content-language" content="de">
<link rel="stylesheet" type="text/css" href="common/galileo_open.css">
<link rel="prev" href="015_c_strukturen_006.htm">
<link rel="next" href="015_c_strukturen_008.htm"><script type="text/javascript"><!--
    function OpenWin(url,name,height,width)
    {
      var InfoWin = window.open(url,name,"directories=0,height="+height+",width=" + width + ",hotkeys=0,location=0,menubar=0,resizable=1,screenX=150,screenY=10,left=150,top=10,scrollbars=1,status=1,titlebar=0,toolbar=0");
      InfoWin.focus();
    }
    //--></script><link href="common/prettify.css" type="text/css" rel="stylesheet"><script type="text/javascript" src="common/prettify.js"></script></head>
<body vlink="#000099" link="#000099" alink="#000099" onload="prettyPrint()">
<table width="100%" border="0" cellpadding="0" cellspacing="0" bgcolor="#000066">
<tr>
<td height="74" valign="bottom" colspan="2"><a href="http://www.galileocomputing.de/katalog/openbook?GPP=opc3"><img src="common/galileocomputing_openbook.gif" width="200" height="56" border="0" alt="Galileo Computing < openbook >" title="Galileo Computing < openbook >"></a></td>
<td width="80" height="74"><a href="http://www.galileocomputing.de/?GPP=opc3"><img src="common/galileocomputing.gif" border="0" alt="Galileo Computing - Professionelle Bücher. Auch für Einsteiger." title="Galileo Computing - Professionelle Bücher. Auch für Einsteiger."></a></td>
</tr>
</table>
<div align="right"><a href="http://www.galileocomputing.de/?GPP=opc3" class="navnav">Professionelle Bücher. Auch für Einsteiger.</a></div><br><table class="tbl" border="0" cellpadding="0" cellspacing="0" width="100%">
<tr>
<td width="190" valign="top">
<table class="tbl1" border="0" cellpadding="3" cellspacing="0" width="190" align="left">
<tr>
<td class="tbl2"><a class="nav" href="index.htm#_top">Inhaltsverzeichnis</a></td>
</tr>
<tr>
<td><a class="navnav" href="000_c_vorwort_001.htm#mj764cb3fd439d3b95d1843e7c7d17f235">Vorwort</a></td>
</tr>
<tr>
<td><a class="navnav" href="000_c_vorwort_gutachter_001.htm#mj3d41cb339c9b2fc1d6e99cdaa93c3860">Vorwort des Gutachters</a></td>
</tr>
<tr>
<td><a class="navnav" href="001_c_einstieg_in_c_001.htm#mja24d93ff97bb42dbebf4689160c45195">1 Einstieg in C</a></td>
</tr>
<tr>
<td><a class="navnav" href="002_c_das_erste_programm_001.htm#mj2604a667cc98d3fa2178751273346b91">2 Das erste Programm</a></td>
</tr>
<tr>
<td><a class="navnav" href="003_c_grundlagen_001.htm#mj7ac54ba315b94149806c1de3fc89ee7f">3 Grundlagen</a></td>
</tr>
<tr>
<td><a class="navnav" href="004_c_ein_ausgabe_001.htm#mj20c131820fbfb1497afd796ee443599e">4 Formatierte Ein-/Ausgabe mit »scanf()« und »printf()«</a></td>
</tr>
<tr>
<td><a class="navnav" href="005_c_basisdatentypen_001.htm#mjeda2957449ddc812dad62b400fe57752">5 Basisdatentypen</a></td>
</tr>
<tr>
<td><a class="navnav" href="006_c_operatoren_001.htm#mjab3693b096d581607801a36ce88905fc">6 Operatoren</a></td>
</tr>
<tr>
<td><a class="navnav" href="007_c_typumwandlung_001.htm#mj5c5e497ac2ab4367fe9df0ffd218cfca">7 Typumwandlung</a></td>
</tr>
<tr>
<td><a class="navnav" href="008_c_kontrollstrukturen_001.htm#mjc7bf6f584a2fe20b4c5f6b16ba15d57d">8 Kontrollstrukturen</a></td>
</tr>
<tr>
<td><a class="navnav" href="009_c_funktionen_001.htm#mj7893101be51aa469fe52334038acd465">9 Funktionen</a></td>
</tr>
<tr>
<td><a class="navnav" href="010_c_praeprozessor_001.htm#mjacdd200a20163a4d3fa418b6cb95763e">10 Präprozessor-Direktiven</a></td>
</tr>
<tr>
<td><a class="navnav" href="011_c_arrays_001.htm#mje29de26c54a3884f7316cbbb2a073ad8">11 Arrays</a></td>
</tr>
<tr>
<td><a class="navnav" href="012_c_zeiger_001.htm#mjee28a882ef9125d2c4cc49121b2c65c1">12 Zeiger (Pointer)</a></td>
</tr>
<tr>
<td><a class="navnav" href="013_c_kommandozeilenargumente_001.htm#mjf6a9e42fa3bc25b2b1e06270e7bf8f68">13 Kommandozeilenargumente</a></td>
</tr>
<tr>
<td><a class="navnav" href="014_c_dyn_speicherverwaltung_001.htm#mj8d062301d2449b13710f1484d499cd9b">14 Dynamische Speicherverwaltung</a></td>
</tr>
<tr>
<td><a class="navh" href="##mj5e146ba18168113a5c645cd2d07c4ec8">15 Strukturen</a></td>
</tr>
<tr>
<td><a class="navnav" href="016_c_ein_ausgabe_funktionen_001.htm#mj136f9ac6b5b7c440aafe5010411ef011">16 Ein-/Ausgabe-Funktionen</a></td>
</tr>
<tr>
<td><a class="navnav" href="017_c_dateien_verzeichnisse_001.htm#mj9f81aea722a9edb8d0080df81eb9402c">17 Attribute von Dateien und das Arbeiten mit Verzeichnissen (nicht ANSI C)</a></td>
</tr>
<tr>
<td><a class="navnav" href="018_c_stdarg_h_001.htm#mj9d64febdc46a1375e5c4498b17154e30">18 Arbeiten mit variabel langen Argumentlisten &#8211; &lt;stdarg.h&gt;</a></td>
</tr>
<tr>
<td><a class="navnav" href="019_c_zeitroutinen_001.htm#mj0a8102e96a1297bd767ac7274e069f0f">19 Zeitroutinen</a></td>
</tr>
<tr>
<td><a class="navnav" href="020_c_headerdateien_001.htm#mjf3caede8ebd504dc6b7454b297c251e8">20 Weitere Headerdateien und ihre Funktionen (ANSI C)</a></td>
</tr>
<tr>
<td><a class="navnav" href="021_c_dyn_datenstrukturen_001.htm#mja75ba2f4ab8f95e9e321d195c1e26d76">21 Dynamische Datenstrukturen</a></td>
</tr>
<tr>
<td><a class="navnav" href="022_c_algorithmen_001.htm#mj07afe6f332eab2e8168da2f69f7b31c4">22 Algorithmen</a></td>
</tr>
<tr>
<td><a class="navnav" href="023_c_cgi_001.htm#mj6c4219b4e615fa24deaa57d5c3d04db8">23 CGI mit C</a></td>
</tr>
<tr>
<td><a class="navnav" href="024_c_mysql_001.htm#mj12dab301033f9fd856aa739270c45e08">24 MySQL und C</a></td>
</tr>
<tr>
<td><a class="navnav" href="025_c_netzwerkprogrammierung_001.htm#mja8101c6e0e4cb2e6fd8312114dad30d7">25 Netzwerkprogrammierung und Cross&ndash;Plattform-Entwicklung</a></td>
</tr>
<tr>
<td><a class="navnav" href="026_c_paralleles_rechnen_001.htm#mj710dc0ad851d57e60533f8797ff9c1e6">26 Paralleles Rechnen</a></td>
</tr>
<tr>
<td><a class="navnav" href="027_c_sicheres_programmieren_001.htm#mj13eba8f9d68ac8414bffaa3a1b24ec31">27 Sicheres Programmieren</a></td>
</tr>
<tr>
<td><a class="navnav" href="028_c_weiterfuehrendes_001.htm#mj3e65f750149ade087925f303b3871af9">28 Wie geht&#8217;s jetzt weiter?</a></td>
</tr>
<tr>
<td><a class="navnav" href="029_c_anhang_a_001.htm#mjec9bf1c5e3fe2e46047c2f9c7aa9c531">A Operatoren</a></td>
</tr>
<tr>
<td><a class="navnav" href="030_c_anhang_b_001.htm#mj803443bb6e7546011c48e6e57fbdbb64">B Die C-Standard-Bibliothek</a></td>
</tr>
<tr>
<td><a class="navnav" href="stichwort.htm#_top">Stichwort</a></td>
</tr>
<tr>
<td><br><a href="http://download.galileo-press.de/openbook/c_von_a_bis_z/galileocomputing_c_von_a_bis_z.zip" class="navnav"><strong>Download:</strong><br>- ZIP, ca. 10,6 MB</a></td>
</tr>
<tr>
<td><a href="http://www.galileocomputing.de/2132?GPP=opc3" class="navnav">Buch bestellen</a></td>
</tr>
<tr>
<td><a class="navnav" href="#kommentar">Ihre Meinung?</a><br><br></td>
</tr>
</table>
</td>
<td width="10"><img src="common/spacer10.gif" width="10" height="10" alt="Spacer"></td>
<td width="85%" valign="top" align="center"><div align="center">
<table width="98%" border="0" cellspacing="0" cellpadding="0" bgcolor="#FFFFFF">
<tr>
<td width="100%" class="start" colspan="1" height="22" align="center"><table width="100%" border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="25%"><a href="015_c_strukturen_006.htm" class="navnav"> &lt;&lt;   zurück</a></td>
<td width="49%"><div align="center"><a href="http://www.galileocomputing.de/?GPP=opc3" class="navnav">Galileo Computing</a> / <a href="http://www.galileocomputing.de/katalog/openbook/?GPP=opc3" class="navnav">&lt;openbook&gt;</a> / <a href="index.htm" class="navnav"> C von A bis Z</a></div></td>
<td align="right" width="25%"><div align="right"><a href="015_c_strukturen_008.htm" class="navnav">vor   &gt;&gt; </a></div></td>
</tr>
</table></td>
</tr>
<tr>
<td width="100%" valign="top"><table width="100%" border="0" cellpadding="10" cellspacing="0" class="box">
<tr>
<td colspan="2"><a href="http://www.galileocomputing.de/2132?GPP=opc3" class="buchtitel">C von A bis Z</a><span class="autor"> von J&uuml;rgen Wolf </span><br><span class="untertitel">Das umfassende Handbuch</span></td>
</tr>
<tr>
<td valign="top" width="211"><dl>
<dt><a href="http://www.galileocomputing.de/2132?GPP=opc3" class="navnav"><img src="common/9783836214117.gif" border="0" alt="Buch: C von A bis Z" title="Buch: C von A bis Z"></a></dt>
<dd><br><a href="http://www.galileocomputing.de/2132?GPP=opc3"><span class="autor"><strong>C von A bis Z</strong><br>3., aktualisierte und erweiterte Auflage, geb., mit CD und Referenzkarte<br>1.190 S., 39,90 Euro<br>Galileo Computing<br>ISBN 978-3-8362-1411-7</span></a></dd>
</dl></td>
<td width="80%"><table border="0">
<tr>
<td valign="baseline"><img src="common/pfeil_u.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="3" class="kap"><strong><a href="015_c_strukturen_001.htm#mj5e146ba18168113a5c645cd2d07c4ec8" class="navnav">15 Strukturen</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="015_c_strukturen_001.htm#mj5746e9498f0b42b5da5195dd8d304f5a" class="navnav">15.1 Struktur deklarieren</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="015_c_strukturen_002.htm#mjd4e56d29fc8197ecf142897054517996" class="navnav">15.2 Initialisierung und Zugriff auf Strukturen</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="015_c_strukturen_003.htm#mj5db2bd787482bd929c5e321891a6d042" class="navnav">15.3 Strukturen als Wertübergabe an eine Funktion</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="015_c_strukturen_004.htm#mjf0db0a41c8d7f11d8a8fa4f92433b986" class="navnav">15.4 Strukturen als Rückgabewert einer Funktion</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="015_c_strukturen_005.htm#mj690ceaadd170181a825217f1528a0056" class="navnav">15.5 Strukturen vergleichen</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="015_c_strukturen_006.htm#mj558e0e4fc0892fc3f91cd810f7c07860" class="navnav">15.6 Arrays von Strukturen</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="#mjbab204931f0ac95af858355cf81e6bd5" class="navh">15.7 Strukturen in Strukturen (Nested Structures)</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="015_c_strukturen_008.htm#mj8bfb506f0c4b39cf342201743b62f422" class="navnav">15.8 Kurze Zusammenfassung zu den Strukturen</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="015_c_strukturen_009.htm#mj9e030e6d45f3619a80b6814a2ba14bea" class="navnav">15.9 Unions</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="015_c_strukturen_010.htm#mj259bc5aff9087f7c3548408b56b74318" class="navnav">15.10 Der Aufzählungstyp »enum«</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="015_c_strukturen_011.htm#mjccb5a85ebc674dd49050598bbc9b7627" class="navnav">15.11 Typendefinition mit »typedef«</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="015_c_strukturen_012.htm#mj94f54125b03d214b3f10816feef043dc" class="navnav">15.12 Attribute von Strukturen verändern (nicht ANSI C)</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="015_c_strukturen_013.htm#mj2f57db5965c2ac0ab2c8d3d97f038272" class="navnav">15.13 Bitfelder</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="015_c_strukturen_014.htm#mjcf48a74fc6a32108952fa69f8833c964" class="navnav">15.14 Das »offsetof«-Makro</a></strong></td>
</tr>
</table><br></td>
</tr>
</table>
<table width="100%" cellpadding="20" cellspacing="0" border="0" bgcolor="#eeeeee">
<tr>
<td><div class="main"><a id="mjbab204931f0ac95af858355cf81e6bd5" name="mjbab204931f0ac95af858355cf81e6bd5"></a><a name="t21"></a><a name="t2t31"></a><br><div align="center"><a href="#top"><img src="common/jupiters.gif" border="0" alt="Galileo Computing - Zum Seitenanfang"></a></div>
<h2 class="t2"><span class="cfett">15.7</span><span class="cfett"> Strukturen in Strukturen (Nested Structures)</span>  <img src="common/15x15leer.gif" width="15" height="15" border="0" alt="top"><img src="common/15x15leer.gif" width="15" height="15" border="0" alt="Zur vorigen Überschrift"></h2>
<p>Neben der Kombination von Arrays und Strukturen können auch Strukturen innerhalb von Strukturen verwendet werden. Ein einfaches Beispiel sind Uhrzeit und Datum:</p>
<div class="listing"><pre class="prettyprint">struct uhrzeit {
   unsigned int stunde;
   unsigned int minute;
   unsigned int sekunde;
};

struct datum {
   unsigned int tag;
   unsigned int monat;
   int jahr;
};

struct termin {
   struct datum d;
   struct uhrzeit z;
} t;</pre></div>
<p>Anhand von Abbildung 15.5 lässt sich deutlich erkennen, was »Strukturen in Strukturen« bedeutet. Es wird dabei auch von <span class="ckursiv">Nested Structures</span> gesprochen.</p>
<div class="bildbox">
<p><a name="IDADEUQ"></a><a onClick="OpenWin('bilder/15_005.gif','Abbildung',800,800)"><img border="0" src="bilderklein/klein15_005.gif" alt="Abbildung"><br><span class="tabunter">Hier klicken, um das Bild zu vergrößern</span></a></p>
</div>
<p class="tabunter"><strong>Abbildung 15.5    </strong>Strukturen in Strukturen</p>
<p>Der Zugriff auf die einzelnen Strukturen ist ein wenig aufwendiger. Hier sehen Sie ein Programmbeispiel, wie auf die einzelnen Elemente und die gesamte Struktur zugegriffen werden kann:</p>
<div class="listing"><pre class="prettyprint">/* nested_struct1.c */
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;

struct uhrzeit {
   unsigned int stunde;
   unsigned int minute;

   unsigned int sekunde;
};

struct datum {
   unsigned int tag;
   unsigned int monat;
   int jahr;
};

struct termin {
   struct datum d;
   struct uhrzeit z;
} t;

int main(void) {
   /* Termin am 19.12.2004 um 20:15 Uhr */
   struct termin t = { {19, 12, 2004}, {20, 15, 0} };

   printf("Termin am ");
   printf("%u.%u.%d um ", t.d.tag, t.d.monat, t.d.jahr);
   printf("%u.%u.%u0 Uhr \n\n",
      t.z.stunde, t.z.minute, t.z.sekunde);

   printf("Neuen Termin eingeben !!\n\n");
   printf("Tag.............: ");
   scanf("%u",&amp;t.d.tag);
   printf("Monat...........: ");
   scanf("%u",&amp;t.d.monat);
   printf("Jahr............: ");
   scanf("%d",&amp;t.d.jahr);
   printf("\n");
   printf("Stunde..........: ");
   scanf("%u",&amp;t.z.stunde);
   printf("Minuten.........: ");
   scanf("%u",&amp;t.z.minute);
   printf("Sekunden........: ");
   scanf("%u",&amp;t.z.sekunde);
   printf("\n");
   printf("Neuer Termin am ");
   printf("%02u.%02u.%04d um ",t.d.tag, t.d.monat, t.d.jahr);
   printf("%02u.%02u.%02u Uhr \n",
      t.z.stunde, t.z.minute, t.z.sekunde);
   return EXIT_SUCCESS;
}</pre></div>
<p>Dieser geringe Mehraufwand stellt eher eine Erleichterung dar. Zuerst werden in diesem Programm zur Demonstration die Werte direkt übergeben:</p>
<div class="listing"><pre class="prettyprint">struct termin t = {{19,12,2004},{20,15,0}};
/* struct termin t = {{struct datum}{struct uhrzeit}} */</pre></div>
<p>Danach werden die Werte über die Tastatur eingelesen, z. B. die Minuten:</p>
<div class="listing"><pre class="prettyprint">scanf("%u", &amp;t.z.minute);</pre></div>
<p>Das Listing wird kaum jemanden überfordern. Daher soll das Programm zur Adressverwaltung mit dem eben gezeigten Programm verbunden werden. Damit hätte die Struktur <span class="clisting">termin</span> folgendes Aussehen:</p>
<div class="listing"><pre class="prettyprint">struct termin {
   struct datum d;
   struct uhrzeit z;
   struct adressen a;
} t[20];</pre></div>
<div class="bildbox">
<p><a name="IDAEQUQ"></a><a onClick="OpenWin('bilder/15_006.gif','Abbildung',800,800)"><img border="0" src="bilderklein/klein15_006.gif" alt="Abbildung"><br><span class="tabunter">Hier klicken, um das Bild zu vergrößern</span></a></p>
</div>
<p class="tabunter"><strong>Abbildung 15.6    </strong>Eine weitere Struktur wurde zur Struktur hinzugefügt.</p>
<p>So können Sie 20 Termine mit Datum, Uhrzeit und der Adresse verwalten. Hier folgt das vollständige Listing:</p>
<div class="listing"><pre class="prettyprint">/* nested_struct2.c */
#include &lt;stdio.h&gt;
#include &lt;string.h&gt;
#include &lt;stdlib.h&gt;
#define MAX 30

/* Zähler Termine */
static int dates = 0;
/* Zähler Adressen */
static int nr = 0;

struct uhrzeit {
                 unsigned int stunde;
                 unsigned int minute;
                 unsigned int sekunde;
               };

struct datum {
   unsigned int tag;
   unsigned int monat;
   int jahr;
};

struct adressen {
   char vname[MAX];
   char nname[MAX];
   long PLZ;
   char ort[MAX];
   int geburtsjahr;
} xyz[100];

struct termin {
   struct datum d;
   struct uhrzeit z;
   struct adressen a;
} t[20];

/* Funktionsprototypen */
void newdate(struct termin *);
int suche(char *);
void listdate(struct termin *,int);
void replacedate(struct termin *,int);
void sortdate(struct termin *,int);
void Eingabe(struct adressen *);
void Ausgabe(struct adressen *);
void Sortadress(struct adressen *);

void newdate(struct termin *t) {
   int auswahl,ret;
   char such_name[MAX];

   printf("Tag.......: ");
   scanf("%u",&amp;t[dates].d.tag);
   printf("Monat.....: ");
   scanf("%u",&amp;t[dates].d.monat);
   printf("Jahr......: ");
   scanf("%d",&amp;t[dates].d.jahr);
   printf("---------------------\n");
   printf("Stunde....: ");
   scanf("%u",&amp;t[dates].z.stunde);
   printf("Minute(n).: ");
   scanf("%u",&amp;t[dates].z.minute);
   printf("---------------------\n");

   printf("\nTermin mit :\n -1- Neuer Adresse\n");
   printf(" -2- Vorhandener Adresse\n");
   printf("Ihre Auswahl : ");
   do {
      scanf("%d",&amp;auswahl);
   } while(getchar()!= '\n');

   if(auswahl == 1) {
      printf("Vorname.....: ");
      fgets(t[dates].a.vname, MAX, stdin);
      printf("Nachname....: ");
      fgets(t[dates].a.nname, MAX, stdin);
      printf("Postleitzahl: ");
      do {
         scanf("%ld",&amp;t[dates].a.PLZ);
      } while(getchar()!= '\n');
      printf("ORT.........: ");
      fgets(t[dates].a.ort, MAX, stdin);
      printf("Geburtsjahr..: ");
      do {
         scanf("%d",&amp;t[dates].a.geburtsjahr);
      } while(getchar()!= '\n');

      /* Neue Adresse kommt auch zum neuen Adresssatz. */
      strcpy(xyz[nr].vname, strtok(t[dates].a.vname, "\n"));
      strcpy(xyz[nr].nname, strtok(t[dates].a.nname, "\n"));
      xyz[nr].PLZ = t[dates].a.PLZ;
      strcpy(xyz[nr].ort, t[dates].a.ort);
      xyz[nr].geburtsjahr=t[dates].a.geburtsjahr;
      dates++;
      nr++;
   }
   else {
      printf("Bitte geben Sie den Nachnamen ein : ");
      fgets(such_name, MAX, stdin);
      ret = suche(strtok(such_name,"\n"));
      if( ret == -1 ) {
         printf("Kein Eintrag vorhanden : %s ???", such_name);
         return;
      }
      strcpy(t[dates].a.vname,xyz[ret].vname);
      strcpy(t[dates].a.nname,xyz[ret].nname);
      t[dates].a.PLZ=xyz[ret].PLZ;
      strcpy(t[dates].a.ort,xyz[ret].ort);
      t[dates].a.geburtsjahr=xyz[ret].geburtsjahr;
      dates++;
   }
}

int suche(char *suchname) {
   int pos, found = 0;

   for(pos = 0; pos &lt;= nr; pos++) {
      if(strcmp(xyz[pos].nname,suchname) == 0) {
         found = 1;
         break;
      }
   }
   if(found)
      return pos;
   else
      return -1;
}

void listdate(struct termin *list, int dates) {
   int i;

   for(i = 0; i &lt; dates; i++) {
      printf("Nr. %d: ", i+1);
      printf("Termin am %02u.%02u.%04d ",
         list[i].d.tag, list[i].d.monat, list[i].d.jahr);
      printf("um %02u.%02u Uhr\n",
         list[i].z.stunde, list[i].z.minute);
      printf("mit %s %s\n\n", list[i].a.vname, list[i].a.nname);
      }
}

void replacedate(struct termin *aendern, int nt) {
    if(nt &lt;= dates &amp;&amp; nt &lt; 20) {
        printf("Bitte neue Terminzeit eingeben!!\n");
        printf("Tag..........: ");
        scanf("%u",&amp;aendern[nt].d.tag);
        printf("Monat........: ");
        scanf("%u",&amp;aendern[nt].d.monat);
        printf("Jahr.........: ");
        scanf("%d",&amp;aendern[nt].d.jahr);
        printf("------------------------\n");
        printf("Stunden......: ");
        scanf("%u",&amp;aendern[nt].z.stunde);
        printf("Minuten......: ");
        scanf("%u",&amp;aendern[nt].z.minute);
      }
    else
       printf("Falsche Eingabe : %d\n", nt);

}

void sortdate(struct termin *sort, int dates) {
   struct termin *temp;
   int i,j;

   temp = malloc(sizeof(struct termin *));
   if(NULL == temp) {
      printf("Konnte keinen Speicher reservieren ...\n");
      return;
   }
   for(i = 0; i &lt; dates; i++) {
      for(j = i + 1; j &lt; dates; j++) {
         if(sort[i].d.jahr &gt; sort[j].d.jahr) {
            *temp=sort[j];
            sort[j]=sort[i];
            sort[i]=*temp;
         }
      }
   }
   printf("... sortiert!!\n");
}

void Eingabe(struct adressen *neu) {
   unsigned int size;

   printf("Vorname : ");
   fgets(neu[nr].vname, MAX, stdin);
   /* newline-Zeichen entfernen */
   size = strlen(neu[nr].vname);
   neu[nr].vname[size-1] = '\0';

   printf("Nachname : ");
   fgets(neu[nr].nname, MAX, stdin);
   /* newline-Zeichen entfernen */
   size = strlen(neu[nr].nname);
   neu[nr].nname[size-1] = '\0';

   printf("Postleitzahl: ");
   do {
      scanf("%ld",&amp;neu[nr].PLZ);
   } while(getchar()!= '\n');
   printf("Wohnort : ");
   fgets(neu[nr].ort, MAX, stdin);
   printf("Geburtsjahr : ");
   do {
      scanf("%d",&amp;neu[nr].geburtsjahr);
   } while(getchar()!= '\n');
   nr++;
}

void Ausgabe(struct adressen *all) {
   int i;

   for(i = 0; i &lt; nr; i++) {
      printf("Vorname.........:%s\n", all[i].vname);
      printf("Nachname........:%s\n", all[i].nname);
      printf("Postleitzahl....:%ld\n", all[i].PLZ);
      printf("Ort.............:%s", all[i].ort);
      printf("Geburtsjahr.....:%d\n\n", all[i].geburtsjahr);
      if( (!(i%2)) &amp;&amp; i!=0) {
         // fflush(stdin);
         printf("\n\tWeiter mit &lt;Enter&gt;\n\n");
         getchar();
      }
   }
}

void Sortadress(struct adressen *sort) {
   struct adressen *temp;
   int i,j;

   temp = malloc(sizeof(struct adressen *));
   if(NULL == temp) {
      printf("Konnte keinen Speicher reservieren ...\n");
      return;
   }
   for(i = 0; i &lt; nr; i++) {
      for(j = i + 1; j &lt; nr; j++) {
         if(strcmp(sort[i].nname, sort[j].nname)&gt;0) {
            *temp=sort[j];
            sort[j]=sort[i];
            sort[i]=*temp;
         }
      }
   }
   printf("... sortiert!!\n");
}

int main(void) {
   int eingabe,aendern;

   do {
      printf("\tTerminverwaltung\n");
      printf("\t----------------\n\n");
      printf("\t-1- Neuer Termin\n");
      printf("\t-2- Termine auflisten\n");
      printf("\t-3- Termin ändern\n");
      printf("\t-4- Termine sortieren\n");
      printf("\t-5- Neue Adresse eingeben\n");
      printf("\t-6- Adressen ausgeben\n");
      printf("\t-7- Adressen sortieren\n");
      printf("\t-8- Programm beenden\n");
      printf("\n\tIhre Auswahl : ");
      scanf("%d",&amp;eingabe);
      /* fflush(stdin); */
      getchar();
      switch(eingabe) {
         case 1  : newdate(t);            break;
         case 2  : listdate(t,dates);     break;
         case 3  : listdate(t,dates);
                  printf("Welchen Termin ändern(Nr.?):");
                  scanf("%d",&amp;aendern);
                  replacedate(t,--aendern);
                  break;
         case 4  : sortdate(t,dates);     break;
         case 5  : Eingabe(xyz);          break;
         case 6  : Ausgabe(xyz);          break;
         case 7  : Sortadress(xyz);       break;
         default : break;
      }
   } while(eingabe &lt; 8);
   printf("Bye\n");
   return EXIT_SUCCESS;
}</pre></div>
<p>Eine kurze Erklärung: Bei der ersten Funktion <span class="clisting">newdate()</span> wird zuerst der neue Termin eingegeben. Anschließend wird erfragt, ob ein neuer Adresseintrag für den Termin vorgenommen werden soll oder ob ein bereits vorhandener Adresssatz verwendet wird. Die nächste Funktion <span class="clisting">listdate()</span> listet die Termine auf. Mit der Funktion <span class="clisting">replacedate()</span> kann ein Termin verschoben werden. Die Funktion <span class="clisting">sortdate()</span> wurde ebenfalls schon ähnlich verwendet. Hier wurde nur nach Jahresdatum sortiert. Als Übung können Sie dies ja bis auf die Minute genau umschreiben. Der Rest des Programms wurde zum Teil schon bei der Adressverwaltung erklärt. Die Suchfunktion wurde dabei verändert. Diese sucht jetzt nach einem ganzen Nachnamen, nicht mehr nur nach dem Anfangsbuchstaben. Dem Programm fehlen noch eine Menge Fehlerüberprüfungen bei der Eingabe. Auf diese wurde aus Gründen der Übersichtlichkeit jedoch verzichtet (Sie können sie zur Übung ja selbst schreiben).</p>
<div class="bildbox">
<p><a name="IDAPCVQ"></a><a onClick="OpenWin('bilder/15_007.gif','Abbildung',800,800)"><img border="0" src="bilderklein/klein15_007.gif" alt="Abbildung"><br><span class="tabunter">Hier klicken, um das Bild zu vergrößern</span></a></p>
</div>
<p class="tabunter"><strong>Abbildung 15.7    </strong>Das Terminverwaltungsprogramm während der Ausführung</p><br><hr><a name="kommentar"></a><h3>Ihr Kommentar</h3>
                       Wie hat Ihnen das &lt;openbook&gt; gefallen? Wir freuen uns immer über Ihre freundlichen und kritischen Rückmeldungen.
                       <form action="http://www.galileo-press.de/feedback/openbook" method="post" style="text-align: center; margin-top: 10px;"><input type="hidden" name="openbookurl" value="http://openbook.galileocomputing.de/c_von_a_bis_z/015_c_strukturen_007.htm"><input type="hidden" name="buchtitel" value="C von A bis Z"><input type="hidden" name="Kapitel" value="15.7 Strukturen in Strukturen (Nested Structures)"><table border="0">
<tr>
<td><label for="name">Name</label><br></td>
<td><input type="text" name="name" id="name" size="40"><br></td>
</tr>
<tr>
<td><label for="email">E-Mail</label><br></td>
<td><input type="text" name="email" id="email" size="40"><br></td>
</tr>
<tr>
<td valign="top"><label for="comment">Ihr Kommentar</label><br></td>
<td><textarea name="comment" id="comment" rows="10" cols="40"></textarea><br></td>
</tr>
<tr>
<td>
</td>
<td><input type="submit" value="Kommentar absenden"></td>
</tr>
</table>
</form>
</div></td>
</tr>
</table></td>
</tr>
<tr>
<td width="100%" class="start" colspan="1" height="22" align="center"><table width="100%" border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="25%"><a href="015_c_strukturen_006.htm" class="navnav"> &lt;&lt;   zurück</a></td>
<td width="49%"><div align="center"><a class="navnav" href="#">&lt;top&gt;</a></div></td>
<td align="right" width="25%"><div align="right"><a href="015_c_strukturen_008.htm" class="navnav">vor   &gt;&gt; </a></div></td>
</tr>
</table></td>
</tr>
</table>
</div></td>
<td width="10" valign="top">&nbsp;&nbsp;</td>
<td width="160" valign="top">
<table border="0" cellpadding="0" cellspacing="0" width="160">
<tr>
<td>
<table border="0" cellpadding="0" cellspacing="0" width="100%">
<tr>
<td class="tbl2" height="20" colspan="2">
&nbsp;<a href="http://www.galileocomputing.de/?GPP=opc3" class="nav">
<strong>Zum Katalog</strong></a>
</td>
</tr>
<tr>
<td valign="top" class="tbl2" width="2">
<img src="common/leer.gif" border="0" height="1" width="1"></td>
<td valign="top">
<table cellspacing="3">
<tr>
<td><a href="http://www.galileocomputing.de/2132?GPP=opc3">
<img src="common/9783836214117_s.gif" width="113" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: C von A bis Z" title="Zum Katalog: C von A bis Z">
<br /><br /><strong>&nbsp;C von A bis Z</strong><br /><img src="common/pfeil_rechts5.gif" border="0" alt="">Jetzt&nbsp;bestellen</a><br /><br />
</td>
</tr>
</table>
</td>
</tr>
</table>
</td>
</tr>
<tr>
<td><img src="common/leer.gif" height="2" width="1" border="0" /></td>
</tr>
<tr>
<td>
<table border="0" cellpadding="0" cellspacing="0" width="100%">
<tr>
<td class="tbl2" height="20" colspan="2"><a href="#kommentar" class="nav"><strong>&nbsp;Ihre Meinung?</strong></a>
</td>
</tr>
<tr>
<td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td>
<td valign="top">
<table cellspacing="3">
<tr>
<td>Wie hat Ihnen das &lt;openbook&gt; gefallen?<br /><a href="#kommentar"><img src="common/pfeil_rechts5.gif" border="0" alt="">Ihre Meinung</a>
<br /><br /></td>
</tr>
</table>
</td>
</tr>
</table>
</td>
</tr>
<tr>
<td><img src="common/leer.gif" height="2" width="1" border="0" /></td>
</tr>
<tr>
<td>
<table border="0" cellpadding="0" cellspacing="0" width="100%">
<tr>
<td class="tbl2" height="20" colspan="2">&nbsp;<a href="http://www.galileocomputing.de/?GPP=opc3" class="nav"><strong>Buchtipps</strong></a></td>
</tr>
<tr> 
<td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/2083?GPP=opc3">
<img src="common/9783836213851_s.gif" width="112" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Einstieg in C++" title="Zum Katalog: Einstieg in C++"><br /><br /><br /><br /><br /><br /><br />&nbsp;Einstieg in C++</a><br /><br /></td>
</tr>
<tr>
<td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/2156?GPP=opc3">
<img src="common/9783836214292_s.gif" width="113" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: C++ von A bis Z" title="Zum Katalog: C++ von A bis Z"><br /><br /><br /><br /><br /><br /><br />&nbsp;C++ von A bis Z</a><br /><br /></td>
</tr>
<tr>
<td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/1299?GPP=opc3">
<img src="common/9783898428392_s.gif" width="113" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: C/C++" title="Zum Katalog: C/C++"><br /><br /><br /><br /><br /><br /><br />&nbsp;C/C++</a><br /><br /></td>
</tr>
<tr>
<td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/1712?GPP=opc3">
<img src="common/9783836211574_s.gif" width="113" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Shell-Programmierung" title="Zum Katalog: Shell-Programmierung"><br /><br /><br /><br /><br /><br /><br />&nbsp;Shell-Programmierung</a><br /><br /></td>
</tr>
<tr>
<td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/2049?GPP=opc3">
<img src="common/9783836213660_s.gif" width="119" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Linux-UNIX-Programmierung" title="Zum Katalog: Linux-UNIX-Programmierung"><br /><br /><br /><br /><br /><br /><br />&nbsp;Linux-UNIX-<br />&nbsp;Programmierung</a><br /><br /></td>
</tr>
<tr>
<td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/2138?GPP=opc3">
<img src="common/9783836214209_s.gif" width="107" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: IT-Handbuch für Fachinformatiker" title="Zum Katalog: IT-Handbuch für Fachinformatiker"><br /><br /><br /><br /><br /><br /><br />&nbsp;IT-Handbuch für <br />&nbsp;Fachinformatiker</a><br /><br /></td>
</tr>
<tr>
<td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/2165?GPP=opc3">
<img src="common/9783836214391_s.gif" width="119" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Ubuntu GNU/Linux" title="Zum Katalog: Ubuntu GNU/Linux"><br /><br /><br /><br /><br /><br /><br />&nbsp;Ubuntu GNU/Linux</a><br /><br /></td>
</tr>
<tr>
<td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/1628?GPP=opc3">
<img src="common/9783836211161_s.gif" width="117" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Coding for Fun" title="Zum Katalog: Coding for Fun"><br /><br /><br /><br /><br /><br /><br /><br />&nbsp;Coding for Fun&nbsp;</a><br /><br /></td>
</tr>
</table></td>
</tr>
<tr>
<td><img src="common/leer.gif" height="2" width="1" border="0" /></td>
</tr>
<tr>
<td>
<table border="0" cellpadding="0" cellspacing="0" width="100%">
<tr>
<td class="tbl2" height="20" colspan="2"><strong>&nbsp;Shopping</strong></td>
</tr>
<tr>
<td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td>
<td valign="top">
<table cellspacing="3">
<tr>
<td><b>Versandkostenfrei</b> bestellen in Deutschland und &Ouml;sterreich<br /><a href="http://www.galileocomputing.de/hilfe/Shop/?GPP=opc3"><img src="common/pfeil_rechts5.gif" border="0" alt="Info">Info</a><br /><br /></td>
</tr>
</table>
</td>
</tr>
</table>
</td>
</tr>
</table>
</td>
</tr>
</table><br><br><hr width="70%" align="center">
<div align="center">
<p class="standard"><strong>Copyright © Galileo Press 2009</strong><br>
        Für Ihren privaten Gebrauch dürfen Sie die Online-Version natürlich ausdrucken.
        Ansonsten unterliegt das &lt;openbook&gt; denselben Bestimmungen, wie die
        gebundene Ausgabe: Das Werk einschließlich aller seiner Teile ist urheberrechtlich
        geschützt. Alle Rechte vorbehalten einschließlich der Vervielfältigung, Übersetzung,
        Mikroverfilmung sowie Einspeicherung und Verarbeitung in elektronischen Systemen.</p><br><a href="http://www.galileocomputing.de/">[Galileo Computing]</a><br><br>
      Galileo Press, Rheinwerkallee 4, 53227 Bonn, Tel.: 0228.42150.0, Fax 0228.42150.77, <a href="mailto:info@galileo-press.de">info@galileo-press.de</a></div><br><br></body>
</html>
