<html>
<head>
<META http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title>Galileo Computing :: C von A bis Z &ndash; 19 Zeitroutinen</title>
<meta name="title" content="Galileo Computing :: C von A bis Z - 19 Zeitroutinen">
<meta name="author" content="J&uuml;rgen Wolf ">
<meta name="publisher" content="Galileo Press 2009">
<meta name="copyright" content="Galileo Press 2009">
<meta name="Description" content="C von A bis Z - Das umfassende Handbuch &ndash; 19 Zeitroutinen">
<meta name="audience" content="Alle">
<meta name="robots" content="INDEX,FOLLOW">
<meta http-equiv="content-language" content="de">
<link rel="stylesheet" type="text/css" href="common/galileo_open.css">
<link rel="prev" href="018_c_stdarg_h_004.htm">
<link rel="next" href="019_c_zeitroutinen_002.htm"><script type="text/javascript"><!--
    function OpenWin(url,name,height,width)
    {
      var InfoWin = window.open(url,name,"directories=0,height="+height+",width=" + width + ",hotkeys=0,location=0,menubar=0,resizable=1,screenX=150,screenY=10,left=150,top=10,scrollbars=1,status=1,titlebar=0,toolbar=0");
      InfoWin.focus();
    }
    //--></script><link href="common/prettify.css" type="text/css" rel="stylesheet"><script type="text/javascript" src="common/prettify.js"></script></head>
<body vlink="#000099" link="#000099" alink="#000099" onload="prettyPrint()">
<table width="100%" border="0" cellpadding="0" cellspacing="0" bgcolor="#000066">
<tr>
<td height="74" valign="bottom" colspan="2"><a href="http://www.galileocomputing.de/katalog/openbook?GPP=opc3"><img src="common/galileocomputing_openbook.gif" width="200" height="56" border="0" alt="Galileo Computing < openbook >" title="Galileo Computing < openbook >"></a></td>
<td width="80" height="74"><a href="http://www.galileocomputing.de/?GPP=opc3"><img src="common/galileocomputing.gif" border="0" alt="Galileo Computing - Professionelle Bücher. Auch für Einsteiger." title="Galileo Computing - Professionelle Bücher. Auch für Einsteiger."></a></td>
</tr>
</table>
<div align="right"><a href="http://www.galileocomputing.de/?GPP=opc3" class="navnav">Professionelle Bücher. Auch für Einsteiger.</a></div><br><table class="tbl" border="0" cellpadding="0" cellspacing="0" width="100%">
<tr>
<td width="190" valign="top">
<table class="tbl1" border="0" cellpadding="3" cellspacing="0" width="190" align="left">
<tr>
<td class="tbl2"><a class="nav" href="index.htm#_top">Inhaltsverzeichnis</a></td>
</tr>
<tr>
<td><a class="navnav" href="000_c_vorwort_001.htm#mj764cb3fd439d3b95d1843e7c7d17f235">Vorwort</a></td>
</tr>
<tr>
<td><a class="navnav" href="000_c_vorwort_gutachter_001.htm#mj3d41cb339c9b2fc1d6e99cdaa93c3860">Vorwort des Gutachters</a></td>
</tr>
<tr>
<td><a class="navnav" href="001_c_einstieg_in_c_001.htm#mja24d93ff97bb42dbebf4689160c45195">1 Einstieg in C</a></td>
</tr>
<tr>
<td><a class="navnav" href="002_c_das_erste_programm_001.htm#mj2604a667cc98d3fa2178751273346b91">2 Das erste Programm</a></td>
</tr>
<tr>
<td><a class="navnav" href="003_c_grundlagen_001.htm#mj7ac54ba315b94149806c1de3fc89ee7f">3 Grundlagen</a></td>
</tr>
<tr>
<td><a class="navnav" href="004_c_ein_ausgabe_001.htm#mj20c131820fbfb1497afd796ee443599e">4 Formatierte Ein-/Ausgabe mit »scanf()« und »printf()«</a></td>
</tr>
<tr>
<td><a class="navnav" href="005_c_basisdatentypen_001.htm#mjeda2957449ddc812dad62b400fe57752">5 Basisdatentypen</a></td>
</tr>
<tr>
<td><a class="navnav" href="006_c_operatoren_001.htm#mjab3693b096d581607801a36ce88905fc">6 Operatoren</a></td>
</tr>
<tr>
<td><a class="navnav" href="007_c_typumwandlung_001.htm#mj5c5e497ac2ab4367fe9df0ffd218cfca">7 Typumwandlung</a></td>
</tr>
<tr>
<td><a class="navnav" href="008_c_kontrollstrukturen_001.htm#mjc7bf6f584a2fe20b4c5f6b16ba15d57d">8 Kontrollstrukturen</a></td>
</tr>
<tr>
<td><a class="navnav" href="009_c_funktionen_001.htm#mj7893101be51aa469fe52334038acd465">9 Funktionen</a></td>
</tr>
<tr>
<td><a class="navnav" href="010_c_praeprozessor_001.htm#mjacdd200a20163a4d3fa418b6cb95763e">10 Präprozessor-Direktiven</a></td>
</tr>
<tr>
<td><a class="navnav" href="011_c_arrays_001.htm#mje29de26c54a3884f7316cbbb2a073ad8">11 Arrays</a></td>
</tr>
<tr>
<td><a class="navnav" href="012_c_zeiger_001.htm#mjee28a882ef9125d2c4cc49121b2c65c1">12 Zeiger (Pointer)</a></td>
</tr>
<tr>
<td><a class="navnav" href="013_c_kommandozeilenargumente_001.htm#mjf6a9e42fa3bc25b2b1e06270e7bf8f68">13 Kommandozeilenargumente</a></td>
</tr>
<tr>
<td><a class="navnav" href="014_c_dyn_speicherverwaltung_001.htm#mj8d062301d2449b13710f1484d499cd9b">14 Dynamische Speicherverwaltung</a></td>
</tr>
<tr>
<td><a class="navnav" href="015_c_strukturen_001.htm#mj5e146ba18168113a5c645cd2d07c4ec8">15 Strukturen</a></td>
</tr>
<tr>
<td><a class="navnav" href="016_c_ein_ausgabe_funktionen_001.htm#mj136f9ac6b5b7c440aafe5010411ef011">16 Ein-/Ausgabe-Funktionen</a></td>
</tr>
<tr>
<td><a class="navnav" href="017_c_dateien_verzeichnisse_001.htm#mj9f81aea722a9edb8d0080df81eb9402c">17 Attribute von Dateien und das Arbeiten mit Verzeichnissen (nicht ANSI C)</a></td>
</tr>
<tr>
<td><a class="navnav" href="018_c_stdarg_h_001.htm#mj9d64febdc46a1375e5c4498b17154e30">18 Arbeiten mit variabel langen Argumentlisten &#8211; &lt;stdarg.h&gt;</a></td>
</tr>
<tr>
<td><a class="navh" href="##mj0a8102e96a1297bd767ac7274e069f0f">19 Zeitroutinen</a></td>
</tr>
<tr>
<td><a class="navnav" href="020_c_headerdateien_001.htm#mjf3caede8ebd504dc6b7454b297c251e8">20 Weitere Headerdateien und ihre Funktionen (ANSI C)</a></td>
</tr>
<tr>
<td><a class="navnav" href="021_c_dyn_datenstrukturen_001.htm#mja75ba2f4ab8f95e9e321d195c1e26d76">21 Dynamische Datenstrukturen</a></td>
</tr>
<tr>
<td><a class="navnav" href="022_c_algorithmen_001.htm#mj07afe6f332eab2e8168da2f69f7b31c4">22 Algorithmen</a></td>
</tr>
<tr>
<td><a class="navnav" href="023_c_cgi_001.htm#mj6c4219b4e615fa24deaa57d5c3d04db8">23 CGI mit C</a></td>
</tr>
<tr>
<td><a class="navnav" href="024_c_mysql_001.htm#mj12dab301033f9fd856aa739270c45e08">24 MySQL und C</a></td>
</tr>
<tr>
<td><a class="navnav" href="025_c_netzwerkprogrammierung_001.htm#mja8101c6e0e4cb2e6fd8312114dad30d7">25 Netzwerkprogrammierung und Cross&ndash;Plattform-Entwicklung</a></td>
</tr>
<tr>
<td><a class="navnav" href="026_c_paralleles_rechnen_001.htm#mj710dc0ad851d57e60533f8797ff9c1e6">26 Paralleles Rechnen</a></td>
</tr>
<tr>
<td><a class="navnav" href="027_c_sicheres_programmieren_001.htm#mj13eba8f9d68ac8414bffaa3a1b24ec31">27 Sicheres Programmieren</a></td>
</tr>
<tr>
<td><a class="navnav" href="028_c_weiterfuehrendes_001.htm#mj3e65f750149ade087925f303b3871af9">28 Wie geht&#8217;s jetzt weiter?</a></td>
</tr>
<tr>
<td><a class="navnav" href="029_c_anhang_a_001.htm#mjec9bf1c5e3fe2e46047c2f9c7aa9c531">A Operatoren</a></td>
</tr>
<tr>
<td><a class="navnav" href="030_c_anhang_b_001.htm#mj803443bb6e7546011c48e6e57fbdbb64">B Die C-Standard-Bibliothek</a></td>
</tr>
<tr>
<td><a class="navnav" href="stichwort.htm#_top">Stichwort</a></td>
</tr>
<tr>
<td><br><a href="http://download.galileo-press.de/openbook/c_von_a_bis_z/galileocomputing_c_von_a_bis_z.zip" class="navnav"><strong>Download:</strong><br>- ZIP, ca. 10,6 MB</a></td>
</tr>
<tr>
<td><a href="http://www.galileocomputing.de/2132?GPP=opc3" class="navnav">Buch bestellen</a></td>
</tr>
<tr>
<td><a class="navnav" href="#kommentar">Ihre Meinung?</a><br><br></td>
</tr>
</table>
</td>
<td width="10"><img src="common/spacer10.gif" width="10" height="10" alt="Spacer"></td>
<td width="85%" valign="top" align="center"><div align="center">
<table width="98%" border="0" cellspacing="0" cellpadding="0" bgcolor="#FFFFFF">
<tr>
<td width="100%" class="start" colspan="1" height="22" align="center"><table width="100%" border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="25%"><a href="018_c_stdarg_h_004.htm" class="navnav"> &lt;&lt;   zurück</a></td>
<td width="49%"><div align="center"><a href="http://www.galileocomputing.de/?GPP=opc3" class="navnav">Galileo Computing</a> / <a href="http://www.galileocomputing.de/katalog/openbook/?GPP=opc3" class="navnav">&lt;openbook&gt;</a> / <a href="index.htm" class="navnav"> C von A bis Z</a></div></td>
<td align="right" width="25%"><div align="right"><a href="019_c_zeitroutinen_002.htm" class="navnav">vor   &gt;&gt; </a></div></td>
</tr>
</table></td>
</tr>
<tr>
<td width="100%" valign="top"><table width="100%" border="0" cellpadding="10" cellspacing="0" class="box">
<tr>
<td colspan="2"><a href="http://www.galileocomputing.de/2132?GPP=opc3" class="buchtitel">C von A bis Z</a><span class="autor"> von J&uuml;rgen Wolf </span><br><span class="untertitel">Das umfassende Handbuch</span></td>
</tr>
<tr>
<td valign="top" width="211"><dl>
<dt><a href="http://www.galileocomputing.de/2132?GPP=opc3" class="navnav"><img src="common/9783836214117.gif" border="0" alt="Buch: C von A bis Z" title="Buch: C von A bis Z"></a></dt>
<dd><br><a href="http://www.galileocomputing.de/2132?GPP=opc3"><span class="autor"><strong>C von A bis Z</strong><br>3., aktualisierte und erweiterte Auflage, geb., mit CD und Referenzkarte<br>1.190 S., 39,90 Euro<br>Galileo Computing<br>ISBN 978-3-8362-1411-7</span></a></dd>
</dl></td>
<td width="80%"><table border="0">
<tr>
<td valign="baseline"><img src="common/pfeil_u.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="3" class="kap"><strong><a href="#mj0a8102e96a1297bd767ac7274e069f0f" class="navh">19 Zeitroutinen</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="#mj856435d4fc082a52189a2acf9876222a" class="navh">19.1 Die Headerdatei &lt;time.h&gt;</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="#mjac3268600497c72a142964a5ebfb5818" class="navh">19.1.1 Konstanten in der Headerdatei &lt;time.h&gt;</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="#mj217453f10cd8ce1a3b3f0dbb82f80657" class="navh">19.1.2 Datums- und Zeitfunktionen in &lt;time.h&gt;</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="019_c_zeitroutinen_002.htm#mj63a12ff6d9c8f3cec192b76d9928b371" class="navnav">19.2 Laufzeitmessung (Profiling)</a></strong></td>
</tr>
</table><br></td>
</tr>
</table>
<table width="100%" cellpadding="20" cellspacing="0" border="0" bgcolor="#eeeeee">
<tr>
<td><div class="main">
<p class="anleser"><em><span class="ckursiv">In der C-Standard-Bibliothek sind einige Funktionen enthalten, mit denen Sie die Zeit bestimmen können. Die Zeit umfasst dabei das Datum und die Uhrzeit.</span></em></p><a id="mj0a8102e96a1297bd767ac7274e069f0f" name="mj0a8102e96a1297bd767ac7274e069f0f"></a><h1 class="t1"><span class="cfett">19</span><span class="cfett"> Zeitroutinen</span></h1><a id="mj856435d4fc082a52189a2acf9876222a" name="mj856435d4fc082a52189a2acf9876222a"></a><a name="t21"></a><a name="t2t31"></a><br><div align="center"><a href="#top"><img src="common/jupiters.gif" border="0" alt="Galileo Computing - Zum Seitenanfang"></a></div>
<h2 class="t2"><span class="cfett">19.1</span><span class="cfett"> Die Headerdatei &lt;time.h&gt;</span>  <a href="#t2t32"><img src="common/down.gif" width="15" height="15" border="0" alt="Zur nächsten Überschrift"></a><img src="common/15x15leer.gif" width="15" height="15" border="0" alt="Zur vorigen Überschrift"></h2>
<p>Es folgen einige Standardfunktionen der Headerdatei <span class="ckursiv">&lt;time.h&gt;</span>, in denen Routinen für Zeit und Datum deklariert sind. Tabelle 19.1 gibt Ihnen einen kurzen Überblick über die speziellen (primitiven) Datentypen in dieser Headerdatei und ihre Bedeutungen.</p><br><table width="100%" border="0" cellspacing="1" cellpadding="3">
<caption class="tabunter"><p class="ptabunter"><strong>Tabelle 19.1    </strong>(Primitive) Datentypen und Struktur für Datum und Zeit</p>
</caption>
<tr>
<td class="tabellenkopf"><span class="cfett">Typ</span>
</td>
<td class="tabellenkopf"><span class="cfett">Bedeutung</span>
</td>
</tr>
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">size_t</pre></div>
</td>
<td class="tabellentext">
<p>arithmetischer Datentyp für Größenangaben</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">clock_t</pre></div>
</td>
<td class="tabellentext">
<p>arithmetischer Datentyp für die CPU-Zeit</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">time_t</pre></div>
</td>
<td class="tabellentext">
<p>arithmetischer Datentyp für Datums- und Zeitangaben</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">struct tm</pre></div>
</td>
<td class="tabellentext">
<p>enthält alle zu einer (gregorianischen) Kalenderzeit relevanten Komponenten</p>
</td>
</tr>
</table><br><p>Laut ANSI-C-Standard sollten in der Struktur <span class="clisting">tm</span> folgende Komponenten enthalten sein:</p><br><table width="100%" border="0" cellspacing="1" cellpadding="3">
<caption class="tabunter"><p class="ptabunter"><strong>Tabelle 19.2    </strong>Bedeutung der Strukturvariablen in »struct tm«</p>
</caption>
<tr>
<td class="tabellenkopf"><span class="cfett">»struct tm«-Variable</span>
</td>
<td class="tabellenkopf"><span class="cfett">Bedeutung</span>
</td>
</tr>
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">int tm_sec;</pre></div>
</td>
<td class="tabellentext">
<p>Sekunden (0&#8211;59)</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">int tm_min;</pre></div>
</td>
<td class="tabellentext">
<p>Minuten (0&#8211;59)</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">int tm_hour;</pre></div>
</td>
<td class="tabellentext">
<p>Stunden (0&#8211;23)</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">int tm_mday;</pre></div>
</td>
<td class="tabellentext">
<p>Monatstag (1&#8211;31)</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">int tm_mon;</pre></div>
</td>
<td class="tabellentext">
<p>Monate (0&#8211;11; Januar = 0)</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">int tm_year;</pre></div>
</td>
<td class="tabellentext">
<p>ab 1900</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">int tm_wday;</pre></div>
</td>
<td class="tabellentext">
<p>Tag seit Sonntag (0&#8211;6; Sonntag = 0)</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">int tm_yday;</pre></div>
</td>
<td class="tabellentext">
<p>Tag seit 1. Januar (0&#8211;365; 1. Januar = 0)</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">int tm_isdst;</pre></div>
</td>
<td class="tabellentext">
<p>Sommerzeit <span class="clisting">(tm_isdst</span> <span class="clisting">&gt;</span> <span class="clisting">0)</span></p>
<p>Winterzeit <span class="clisting">(tm_istdst</span> <span class="clisting">==</span> <span class="clisting">0)</span></p>
<p>nicht verfügbar (<span class="clisting">tm_isdst</span> <span class="clisting">&lt;</span> <span class="clisting">0)</span></p>
</td>
</tr>
</table><br><p>Auf Linux-Systemen sind außerdem noch folgende Komponenten vorhanden:</p>
<div class="listing"><pre class="prettyprint">long int tm_gmtoff;</pre></div>
<p><span class="clisting">tm_gmtoff</span> gibt die Sekunden östlich von UTC bzw. den negativen Wert westlich von UTC für die Zeitzonen an. UTC steht für <span class="ckursiv">Universal Time Coordinated</span> und dient als Bezeichnung für eine auf der gesamten Erde einheitliche Zeitskala. Die Universal Time ist identisch mit der Greenwich Mean Time (GMT). Diese Angabe kann aber auch unter</p>
<div class="listing"><pre class="prettyprint">long int __tm_gmtoff</pre></div>
<p>vorliegen. Ebenfalls nur bei Linux ist folgende Komponente enthalten:</p>
<div class="listing"><pre class="prettyprint">const char *tm_zone;</pre></div>
<p>Diese Variable enthält den Namen der aktuellen Zeitzone. Diese kann auch in folgender Schreibweise angegeben sein:</p>
<div class="listing"><pre class="prettyprint">const char *__tm_zone;</pre></div><a id="mjac3268600497c72a142964a5ebfb5818" name="mjac3268600497c72a142964a5ebfb5818"></a><a name="t31"></a><br><div align="center"><a href="#top"><img src="common/jupiters.gif" border="0" alt="Galileo Computing - Zum Seitenanfang"></a></div><a name="t2t32"></a><h3 class="t3"><span class="cfett">19.1.1</span><span class="cfett"> Konstanten in der Headerdatei &lt;time.h&gt;</span>  <a href="#t2t33"><img src="common/down.gif" width="15" height="15" border="0" alt="Zur nächsten Überschrift"></a><a href="#t2t31"><img src="common/top.gif" width="15" height="15" border="0" alt="Zur vorigen Überschrift"></a></h3>
<p>Folgende zwei Konstanten sind in der Headerdatei <span class="ckursiv">&lt;time.h&gt;</span> deklariert:</p>
<ul class="gp">
<li><span class="clisting">CLOCKS_PER_SEC</span> &#8211; Die Konstante enthält die Anzahl von <span class="clisting">clock_t</span>-Einheiten pro Sekunde.</li>
</ul>
<ul class="gp">
<li><span class="clisting">NULL</span> &#8211; Das ist derselbe <span class="clisting">NULL</span>-Zeiger, den Sie schon in der Headerdatei <span class="ckursiv">&lt;stdio.h&gt;</span> kennengelernt haben.</li>
</ul><a id="mj217453f10cd8ce1a3b3f0dbb82f80657" name="mj217453f10cd8ce1a3b3f0dbb82f80657"></a><a name="t32"></a><br><div align="center"><a href="#top"><img src="common/jupiters.gif" border="0" alt="Galileo Computing - Zum Seitenanfang"></a></div><a name="t2t33"></a><h3 class="t3"><span class="cfett">19.1.2</span><span class="cfett"> Datums- und Zeitfunktionen in &lt;time.h&gt;</span>  <img src="common/15x15leer.gif" width="15" height="15" border="0" alt="top"><a href="#t2t32"><img src="common/top.gif" width="15" height="15" border="0" alt="Zur vorigen Überschrift"></a></h3>
<p>Die Zeit, mit der der Systemkern arbeitet, ist die Anzahl der Sekunden, die seit dem 1. Januar 1970, 00:00:00 Uhr, vergangen sind. Diese Zeit wird immer mit dem Datentyp <span class="clisting">time_t</span> dargestellt und enthält das Datum und die Uhrzeit. Diese Zeit kann mit der Funktion</p>
<div class="listing"><pre class="prettyprint">time_t time(time_t *zeitzeiger);</pre></div>
<p>ermittelt werden. Wird für den Parameter <span class="clisting">zeitzeiger</span> kein <span class="clisting">NULL</span>-Zeiger verwendet, befindet sich an dieser Adresse die aktuelle Systemzeit. Hierzu folgt nun ein kleines Listing, das die Zeit in Sekunden fortlaufend seit dem 1. Januar 1970 um 00:00:00 Uhr mithilfe der Funktion <span class="clisting">time()</span> ausgibt:</p>
<div class="listing"><pre class="prettyprint">/* time1.c */
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;time.h&gt;

#ifdef  __unix__
   #define clrscr() printf("\x1B[2J")
#else
   #include &lt;stdlib.h&gt;
   #define clrscr() system("cls")
#endif

int main(void) {
   time_t t;

   time(&amp;t);
   while(1) {
      clrscr();
      printf("%ld\n",t);
      printf("Mit &lt;STRG&gt;&lt;C&gt; bzw. &lt;STRG&gt;&lt;D&gt; beenden!! ");
      time(&amp;t);
   }
   return EXIT_SUCCESS;
}</pre></div>
<p>Ob es nach dem »Jahr 2000«-Problem zum Jahre 2038 zum nächsten Problem kommt, bleibt noch offen. Bei vielen Rechnern ist <span class="clisting">time_t</span> als <span class="clisting">long</span> implementiert, womit Platz für etwa 2 Milliarden Sekunden wäre. Dies wäre im Jahr 2038 erreicht. Der Standard schreibt hier nicht vor, welchen Wert <span class="clisting">time_t</span> haben soll, und somit ist der Wertebereich von der Implementierung abhängig.</p>
<h4 class="t4"><span class="cfett">»localtime()« und »gmtime()« &#8211; Umwandeln von »time_t« in »struct tm«</span></h4>
<p>Die Ausgabe der Sekunden als Zeitformat ist nicht gerade originell. Sie könnten jetzt anfangen, Funktionen zu schreiben, mit denen der Rückgabewert der Funktion <span class="clisting">time()</span> in ein entsprechendes Format umgerechnet wird. Oder Sie verwenden bereits geschriebene Standardfunktionen wie:</p>
<div class="listing"><pre class="prettyprint">struct tm *localtime(const time_t *zeitzeiger);
struct tm *gmtime(const time_t *zeitzeiger);</pre></div>
<p>Beide Funktionen liefern als Rückgabewert die Adresse einer Zeitangabe vom Typ <span class="clisting">struct tm</span>. Diese Struktur wurde bereits zu Beginn dieses Kapitels behandelt. Die Funktion <span class="clisting">localtime()</span> wandelt die Kalenderzeit der Adresse <span class="clisting">time_t *zeitzeiger</span> in lokale Ortszeit um &#8211; unter der Berücksichtigung von Sommer- und Winterzeit. <span class="clisting">gmtime()</span> dagegen wandelt die Kalenderzeit in die UTC-Zeit um.</p>
<p>Hierzu ein Beispiel, das die Eingabe eines Geburtsdatums erwartet und anschließend das Alter in Jahren, Monaten und Tagen ausgibt:</p>
<div class="listing"><pre class="prettyprint">/* time2.c */
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;time.h&gt;

struct tm *tmnow;

void today(void) {
   time_t tnow;

   time(&amp;tnow);
   tmnow = localtime(&amp;tnow);
   printf("Heute ist der ");
   printf("%d.%d.%d\n",
      tmnow-&gt;tm_mday, tmnow-&gt;tm_mon + 1, tmnow-&gt;tm_year + 1900);
}

int main(void) {
   int tag, monat, jahr;
   unsigned int i=0, tmp;

   printf("Bitte gib Deinen Geburtstag ein!\n");
   printf("Tag : ");
   scanf("%d", &amp;tag);
   printf("Monat : ");
   scanf("%d", &amp;monat);
   printf("Jahr (jjjj) : ");
   scanf("%d", &amp;jahr);
   today();
   if(tmnow-&gt;tm_mon &lt; monat) {
      i = 1;
      tmp=tmnow-&gt;tm_mon+1-monat;
      monat=tmp+12;
   }
   else {
      tmp=tmnow-&gt;tm_mon+1-monat;
      monat=tmp;
   }
   if(monat == 12) {
      monat = 0;
      i = 0;
   }
   printf("Sie sind %d Jahre %d Monat(e) %d Tag(e) alt\n",
      tmnow-&gt;tm_year+1900-jahr-i,monat, tmnow-&gt;tm_mday-tag);
   return EXIT_SUCCESS;
}</pre></div>
<div class="bildbox">
<p><a name="IDAJYUQ"></a><a onClick="OpenWin('bilder/19_001.gif','Abbildung',800,800)"><img border="0" src="bilderklein/klein19_001.gif" alt="Abbildung"><br><span class="tabunter">Hier klicken, um das Bild zu vergrößern</span></a></p>
</div>
<p class="tabunter"><strong>Abbildung 19.1    </strong>Verwendung der Funktion »localtime()«</p>
<p>Eine Anmerkung zur <span class="clisting">if else</span>-Bedingung im Programm: Diese war erforderlich, damit im Monatsdatum kein negativer Wert zurückgegeben wird und Sie nicht auf einmal 1 Jahr älter sind.</p>
<h4 class="t4"><span class="cfett">»mktime()« &#8211; Umwandeln von »struct tm« in »time_t«</span></h4>
<p>Kommen wir jetzt zum Gegenstück der Funktionen <span class="clisting">localtime()</span> und <span class="clisting">gmtime()</span>:</p>
<div class="listing"><pre class="prettyprint">time_t mktime(struct tm *zeitzeiger);</pre></div>
<p>Auf diese Weise wird eine Zeit im <span class="clisting">struct tm</span>-Format wieder in eine Zeit im <span class="clisting">time_t</span>-Format umgewandelt. Ist die Kalenderzeit nicht darstellbar, gibt diese Funktion &#8211;1 zurück. Die echten Werte der Komponenten <span class="clisting">tm_yday</span> und <span class="clisting">tm_wday</span> in <span class="clisting">zeitzeiger</span> werden ignoriert. Die ursprünglichen Werte der Felder, <span class="clisting">tm_sec</span>, <span class="clisting">tm_min</span>, <span class="clisting">tm_hour</span>, <span class="clisting">tm_mday</span> und <span class="clisting">tm_mon</span>, sind nicht auf den durch die <span class="clisting">tm</span>-Struktur festgelegten Bereich beschränkt. Befinden sich die Felder nicht im korrekten Bereich, werden diese angepasst.</p>
<p>Das heißt konkret: Wird z. B. das fehlerhafte Datum 38.3.2001 eingegeben, muss die Funktion <span class="clisting">mktime()</span> dieses Datum richtig setzen. Bei richtiger Rückgabe erhalten Sie entsprechende Werte für <span class="clisting">tm_yday</span> und <span class="clisting">tm_wday</span>. Der zulässige Bereich für die Kalenderzeit liegt zwischen dem 1. Januar 1970, 00:00:00 Uhr, und dem 19. Januar 2038, 03:14:07 Uhr.</p>
<p>Ein Beispiel soll zeigen, wie Sie den genauen Wochentag durch diese Funktion ermitteln können:</p>
<div class="listing"><pre class="prettyprint">/* time3.c */
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;time.h&gt;

char *wday[] = {
   "Sonntag", "Montag", "Dienstag", "Mittwoch",
   "Donnerstag", "Freitag", "Samstag", "??????"
};

int main(void) {
   struct tm time_check;
   int year, month, day;

   /* Jahr, Monat und Tag eingeben zum
    * Herausfinden des Wochentags */
   printf("Jahr : ");
   scanf("%d", &amp;year);
   printf("Monat: ");
   scanf("%d", &amp;month);
   printf("Tag  : ");
   scanf("%d", &amp;day);

   /* Wir füllen unsere Struktur struct tm time_check
    * mit Werten. */
   time_check.tm_year = year - 1900;
   time_check.tm_mon = month - 1;
   time_check.tm_mday = day;

   /* 00:00:01 Uhr */
   time_check.tm_hour  = 0;
   time_check.tm_min   = 0;
   time_check.tm_sec   = 1;
   time_check.tm_isdst = -1;

   if(mktime(&amp;time_check) == -1)
      time_check.tm_wday = 7;  /* = unbekannter Tag */


   /* Der Tag des Datums wird ausgegeben. */
   printf("Dieser Tag ist/war ein %s\n",
      wday[time_check.tm_wday]);
   return EXIT_SUCCESS;
}</pre></div>
<h4 class="t4"><span class="cfett">»asctime()« und »ctime()« &#8211; Umwandeln von Zeitformaten in einen String</span></h4>
<p>Mit zwei Funktionen können die beiden Zeitformen <span class="clisting">struct tm</span> und <span class="clisting">time_t</span> in einen String konvertiert werden. Hier sehen Sie die Syntax der beiden:</p>
<div class="listing"><pre class="prettyprint">char *asctime(struct tm *zeitzeiger);
char *ctime(const time_t *zeitzeiger);</pre></div>
<p>Auch dazu ein kleines Beispiel in einem Listing:</p>
<div class="listing"><pre class="prettyprint">/* time4.c */
#include &lt;stdio.h&gt;
#include &lt;time.h&gt;
#include &lt;string.h&gt;
#include &lt;stdlib.h&gt;

int main(int argc, char **argv) {
   FILE *datei;
   time_t time1;
   struct tm *time2;
   char zeit[25];
   int c;

   if(argc&lt;2) {
      printf("Bitte eingeben : %s textdatei.txt\n",*argv);
      return EXIT_FAILURE;
   }
   if((datei = fopen(*++argv,"w+")) == NULL) {
      printf("Konnte Datei : %s nicht öffnen!!!!\n",*argv);
      return EXIT_FAILURE;
   }
   printf("Eingabe machen (mit '#' beenden)\n&gt;");
   /* Wir schreiben in unsere Datei und beenden diese
    * mit dem Zeichen '#'. */
   while((c=getchar()) != '#')
      putc(c, datei);
   putc('\n', datei);

   /* zuerst time_t-Format */
   time(&amp;time1);
   printf("Heute ist %s und Sie haben eben die "
          "Datei %s geschlossen\n",ctime(&amp;time1), *argv);

   /* jetzt struct tm-Format mit asctime() */
   time1=time(NULL);
   time2=localtime(&amp;time1);
   strcpy(zeit,asctime(time2));

   /* Das Datum schreiben wir in die Datei ... */
   fprintf(datei,"%s\n",zeit);
   fclose(datei);
   return EXIT_SUCCESS;
}</pre></div>
<p>Dieses Listing gibt zum einen das heutige Datum mit der Funktion <span class="clisting">ctime()</span> auf dem Bildschirm aus und schreibt zum anderen den Rückgabewert der Funktion <span class="clisting">asctime()</span> in eine Textdatei.</p>
<h4 class="t4"><span class="cfett">»difftime()« &#8211; Differenz zweier Zeiten</span></h4>
<p>Wird eine Differenz zwischen zwei Zeiten benötigt, lässt sich diese mit der folgenden Funktion ermitteln:</p>
<div class="listing"><pre class="prettyprint">double difftime(time_t zeit1, time_t zeit0);</pre></div>
<p>Diese Funktion liefert die Differenz von <span class="clisting">zeit1</span> minus <span class="clisting">zeit0</span> als <span class="clisting">double</span>-Wert zurück. Hierzu ein einfaches und kurzes Beispiel:</p>
<div class="listing"><pre class="prettyprint">/* time5.c */
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;time.h&gt;

int main(void) {
   time_t start, stop;
   double diff;

   printf("Einen Augenblick bitte ...\n");
   start=time(NULL);
   while((diff=difftime(stop=time(NULL),start)) != 5);
   printf("%.1f sek. vorbei!!\n",diff);
   return EXIT_SUCCESS;
}</pre></div>
<p>Das Programm wartet fünf Sekunden, bis es einen entsprechenden Text ausgibt. Bei</p>
<div class="listing"><pre class="prettyprint">while((diff=difftime(stop=time(NULL),start)) !=5);</pre></div>
<p>wurde die Funktion <span class="clisting">time()</span> gleich in der Funktion <span class="clisting">difftime()</span> ausgeführt. Natürlich ist dies nicht so gut lesbar, aber es erfüllt denselben Zweck wie:</p>
<div class="listing"><pre class="prettyprint">while((diff=difftime(stop,start)) != 5)
   stop=time(NULL);</pre></div>
<h4 class="t4"><span class="cfett">»clock()« &#8211; Verbrauchte CPU-Zeit für ein Programm</span></h4>
<p>Eine weitere häufig gestellte Frage lautet: Wie kann ich herausfinden, wie lange das Programm schon läuft? Sie können dies mit folgender Funktion ermitteln:</p>
<div class="listing"><pre class="prettyprint">clock_t clock(void);</pre></div>
<p>Diese Funktion liefert die verbrauchte CPU-Zeit seit dem Programmstart zurück. Falls die CPU-Zeit nicht verfügbar ist, gibt die Funktion &#8211;1 zurück. Wenn Sie die CPU-Zeit in Sekunden benötigen, muss der Rückgabewert dieser Funktion durch <span class="clisting">CLOCKS_PER_SEC</span> dividiert werden; Beispiel:</p>
<div class="listing"><pre class="prettyprint">/* runtime.c */
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;time.h&gt;

int main(void) {
   clock_t prgstart, prgende;
   int c;

   prgstart=clock();
   printf("Geben Sie etwas ein, und beenden Sie mit #\n");
   printf("\n &gt; ");
   while((c=getchar())!= '#')
      putchar(c);
   prgende=clock();
   printf("Die Programmlaufzeit betrug %.2f Sekunden\n",
      (float)(prgende-prgstart) / CLOCKS_PER_SEC);
   return EXIT_SUCCESS;
}</pre></div>
<div class="bildbox">
<p><a name="IDARDVQ"></a><a onClick="OpenWin('bilder/19_002.gif','Abbildung',800,800)"><img border="0" src="bilderklein/klein19_002.gif" alt="Abbildung"><br><span class="tabunter">Hier klicken, um das Bild zu vergrößern</span></a></p>
</div>
<p class="tabunter"><strong>Abbildung 19.2    </strong>Verbrauchte Zeit eines Programms mit »clock()« ermitteln</p>
<p>Damit dürfte es Ihnen nicht schwerfallen, die Nutzungsdauer eines Programms herauszubekommen.</p>
<h4 class="t4"><span class="cfett">»strftime()« &#8211; »struct tm« in einen benutzerdefinierten String umwandeln</span></h4>
<p>Als Nächstes folgt eine Funktion, die Sie als die <span class="clisting">sprintf()</span>-Funktion für Zeit- und Datumswerte ansehen können. Die Syntax lautet:</p>
<div class="listing"><pre class="prettyprint">size_t strftime(char * restrict puffer, int maxzeichen,
                const char * restrict format,
                struct tm * restrict zeitzeiger);</pre></div>
<p>So kann die Kalenderzeit aus <span class="clisting">struct tm *zeitzeiger</span> in einem entsprechenden Format in die Adresse <span class="clisting">puffer</span> geschrieben werden. Folgende Umwandlungsvorgaben können Sie dabei verwenden:</p><br><table width="100%" border="0" cellspacing="1" cellpadding="3">
<caption class="tabunter"><p class="ptabunter"><strong>Tabelle 19.3    </strong>Formatierungszeichen für eine benutzerdefinierte Zeitangabe</p>
</caption>
<tr>
<td class="tabellenkopf"><span class="cfett">Format</span>
</td>
<td class="tabellenkopf"><span class="cfett"> wird ersetzt durch </span>
</td>
<td class="tabellenkopf"><span class="cfett">Beispiel</span>
</td>
</tr>
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">%a</pre></div>
</td>
<td class="tabellentext">
<p>Wochenname (gekürzt)</p>
</td>
<td class="tabellentext">
<p>Sat</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">%A</pre></div>
</td>
<td class="tabellentext">
<p>Wochenname (ausgeschrieben)</p>
</td>
<td class="tabellentext">
<p>Saturday</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">%b</pre></div>
</td>
<td class="tabellentext">
<p>Monatsname (gekürzt)</p>
</td>
<td class="tabellentext">
<p>Jan</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">%B</pre></div>
</td>
<td class="tabellentext">
<p>Monatsname (ausgeschrieben)</p>
</td>
<td class="tabellentext">
<p>January</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">%c</pre></div>
</td>
<td class="tabellentext">
<p>entsprechende lokale Zeit- und Datumsdarstellung</p>
</td>
<td class="tabellentext">
<p>Thu Jun 11 22:22:22 MET 2009</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">%d</pre></div>
</td>
<td class="tabellentext">
<p>Monatstag (1&#8211;31)</p>
</td>
<td class="tabellentext">
<p>22</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">%H</pre></div>
</td>
<td class="tabellentext">
<p>Stunde im 24-Stunden-Format (0&#8211;23)</p>
</td>
<td class="tabellentext">
<p>23</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">%I</pre></div>
</td>
<td class="tabellentext">
<p>Stunde im 12-Stunden-Format (1&#8211;12)</p>
</td>
<td class="tabellentext">
<p>5</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">%j</pre></div>
</td>
<td class="tabellentext">
<p>Tag des Jahres (1&#8211;366)</p>
</td>
<td class="tabellentext">
<p>133</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">%m</pre></div>
</td>
<td class="tabellentext">
<p>Monat (1&#8211;12)</p>
</td>
<td class="tabellentext">
<p>5</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">%M</pre></div>
</td>
<td class="tabellentext">
<p>Minute (0&#8211;59)</p>
</td>
<td class="tabellentext">
<p>40</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">%p</pre></div>
</td>
<td class="tabellentext">
<p>AM- oder PM-Zeitangabe; Indikator für das 12-Stunden-Format (USA)</p>
</td>
<td class="tabellentext">
<p>PM</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">%S</pre></div>
</td>
<td class="tabellentext">
<p>Sekunden (0&#8211;69)</p>
</td>
<td class="tabellentext">
<p>55</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">%U</pre></div>
</td>
<td class="tabellentext">
<p>Wochennummer (0&#8211;53; Sonntag als erster Tag der Woche)</p>
</td>
<td class="tabellentext">
<p>33</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">%w</pre></div>
</td>
<td class="tabellentext">
<p>Wochentag (0&#8211;6, Sonntag = 0)</p>
</td>
<td class="tabellentext">
<p>3</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">%W</pre></div>
</td>
<td class="tabellentext">
<p>Wochennummer (0&#8211;53; Montag als erster Tag der Woche)</p>
</td>
<td class="tabellentext">
<p>4</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">%x</pre></div>
</td>
<td class="tabellentext">
<p>lokale Datumsdarstellung</p>
</td>
<td class="tabellentext">
<p>02/20/09</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">%X</pre></div>
</td>
<td class="tabellentext">
<p>lokale Zeitdarstellung</p>
</td>
<td class="tabellentext">
<p>20:15:00</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">%y</pre></div>
</td>
<td class="tabellentext">
<p>Jahreszahl (ohne Jahrhundertzahl 0&#8211;99)</p>
</td>
<td class="tabellentext">
<p>09 (2009)</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">%Y</pre></div>
</td>
<td class="tabellentext">
<p>Jahreszahl (mit Jahrhundertzahl YYYY)</p>
</td>
<td class="tabellentext">
<p>2009</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">%Z, %z</pre></div>
</td>
<td class="tabellentext">
<p>Zeitzone (gibt nichts aus, wenn Zeitzone unbekannt)</p>
</td>
<td class="tabellentext">
<p>MET</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">%%</pre></div>
</td>
<td class="tabellentext">
<p>Prozentzeichen</p>
</td>
<td class="tabellentext">
<p>%</p>
</td>
</tr>
</table><br><br><table width="100%" border="0" cellspacing="1" cellpadding="3">
<tr>
<td class="tabellenkopf"><span class="cfett">Hinweis</span>
</td>
</tr>
<tr>
<td class="tabellentext">
<p class="BStandard">Bei einigen Compilern (beispielsweise GNU-GCC) findet man noch mehr von diesen Umwandlungszeichen. Hierzu will ich Sie allerdings auf die entsprechende Manual-Page von <span class="clisting">strftime()</span> (<span class="ckursiv"><a href="http://linux.die.net./man/3/striftime">http://linux.die.net./man/3/striftime</a></span>) verweisen.</p>
</td>
</tr>
</table><br><br><table width="100%" border="0" cellspacing="1" cellpadding="3">
<tr>
<td class="tabellenkopf"><span class="cfett">Hinweis</span>
</td>
</tr>
<tr>
<td class="tabellentext">
<p class="BStandard">Zu <span class="clisting">strftime()</span> gibt es mit <span class="clisting">wcsftime()</span> auch noch ein Gegenstück für breite Zeichen. Die Funktion entspricht im Grunde der von <span class="clisting">strftime()</span>, nur dass der Formatstring ein String mit breiten Zeichen ist. Auch die maximale Länge (zweiter Parameter) ist hierbei die Anzahl der breiten Zeichen und nicht die Anzahl von Bytes.</p>
</td>
</tr>
</table><br><p>Das folgende Listing zeigt, wie diese Angaben verwendet werden können:</p>
<div class="listing"><pre class="prettyprint">/* time6.c */
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;time.h&gt;

int main(void) {
   struct tm *zeit;
   time_t sekunde;
   char string[80];
   time(&amp;sekunde);
   zeit = localtime(&amp;sekunde);
   strftime(string, 80,
   "Es ist %H Uhr und %M Minuten (%Z) %A, %B %Y",zeit);
   printf("%s\n",string);
   return EXIT_SUCCESS;
}</pre></div>
<p>Es wird übrigens empfohlen, bei der formatierten Zeitausgabe des Jahres <span class="clisting">%Y</span> statt <span class="clisting">%y</span> zu verwenden, um Probleme mit dem Datum ab dem Jahr 2000 zu vermeiden.</p>
<p>Abbildung 19.3 fasst alle Funktionen, die Sie hier kennengelernt haben, anhand ihrer Beziehungen zueinander zusammen.</p>
<div class="bildbox">
<p><a name="IDAPRVQ"></a><a onClick="OpenWin('bilder/19_003.gif','Abbildung',800,800)"><img border="0" src="bilderklein/klein19_003.gif" alt="Abbildung"><br><span class="tabunter">Hier klicken, um das Bild zu vergrößern</span></a></p>
</div>
<p class="tabunter"><strong>Abbildung 19.3    </strong>Datums- und Zeitfunktionen im Überblick</p><br><hr><a name="kommentar"></a><h3>Ihr Kommentar</h3>
                       Wie hat Ihnen das &lt;openbook&gt; gefallen? Wir freuen uns immer über Ihre freundlichen und kritischen Rückmeldungen.
                       <form action="http://www.galileo-press.de/feedback/openbook" method="post" style="text-align: center; margin-top: 10px;"><input type="hidden" name="openbookurl" value="http://openbook.galileocomputing.de/c_von_a_bis_z/019_c_zeitroutinen_001.htm"><input type="hidden" name="buchtitel" value="C von A bis Z"><input type="hidden" name="Kapitel" value="19 Zeitroutinen"><table border="0">
<tr>
<td><label for="name">Name</label><br></td>
<td><input type="text" name="name" id="name" size="40"><br></td>
</tr>
<tr>
<td><label for="email">E-Mail</label><br></td>
<td><input type="text" name="email" id="email" size="40"><br></td>
</tr>
<tr>
<td valign="top"><label for="comment">Ihr Kommentar</label><br></td>
<td><textarea name="comment" id="comment" rows="10" cols="40"></textarea><br></td>
</tr>
<tr>
<td>
</td>
<td><input type="submit" value="Kommentar absenden"></td>
</tr>
</table>
</form>
</div></td>
</tr>
</table></td>
</tr>
<tr>
<td width="100%" class="start" colspan="1" height="22" align="center"><table width="100%" border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="25%"><a href="018_c_stdarg_h_004.htm" class="navnav"> &lt;&lt;   zurück</a></td>
<td width="49%"><div align="center"><a class="navnav" href="#">&lt;top&gt;</a></div></td>
<td align="right" width="25%"><div align="right"><a href="019_c_zeitroutinen_002.htm" class="navnav">vor   &gt;&gt; </a></div></td>
</tr>
</table></td>
</tr>
</table>
</div></td>
<td width="10" valign="top">&nbsp;&nbsp;</td>
<td width="160" valign="top">
<table border="0" cellpadding="0" cellspacing="0" width="160">
<tr>
<td>
<table border="0" cellpadding="0" cellspacing="0" width="100%">
<tr>
<td class="tbl2" height="20" colspan="2">
&nbsp;<a href="http://www.galileocomputing.de/?GPP=opc3" class="nav">
<strong>Zum Katalog</strong></a>
</td>
</tr>
<tr>
<td valign="top" class="tbl2" width="2">
<img src="common/leer.gif" border="0" height="1" width="1"></td>
<td valign="top">
<table cellspacing="3">
<tr>
<td><a href="http://www.galileocomputing.de/2132?GPP=opc3">
<img src="common/9783836214117_s.gif" width="113" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: C von A bis Z" title="Zum Katalog: C von A bis Z">
<br /><br /><strong>&nbsp;C von A bis Z</strong><br /><img src="common/pfeil_rechts5.gif" border="0" alt="">Jetzt&nbsp;bestellen</a><br /><br />
</td>
</tr>
</table>
</td>
</tr>
</table>
</td>
</tr>
<tr>
<td><img src="common/leer.gif" height="2" width="1" border="0" /></td>
</tr>
<tr>
<td>
<table border="0" cellpadding="0" cellspacing="0" width="100%">
<tr>
<td class="tbl2" height="20" colspan="2"><a href="#kommentar" class="nav"><strong>&nbsp;Ihre Meinung?</strong></a>
</td>
</tr>
<tr>
<td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td>
<td valign="top">
<table cellspacing="3">
<tr>
<td>Wie hat Ihnen das &lt;openbook&gt; gefallen?<br /><a href="#kommentar"><img src="common/pfeil_rechts5.gif" border="0" alt="">Ihre Meinung</a>
<br /><br /></td>
</tr>
</table>
</td>
</tr>
</table>
</td>
</tr>
<tr>
<td><img src="common/leer.gif" height="2" width="1" border="0" /></td>
</tr>
<tr>
<td>
<table border="0" cellpadding="0" cellspacing="0" width="100%">
<tr>
<td class="tbl2" height="20" colspan="2">&nbsp;<a href="http://www.galileocomputing.de/?GPP=opc3" class="nav"><strong>Buchtipps</strong></a></td>
</tr>
<tr> 
<td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/2083?GPP=opc3">
<img src="common/9783836213851_s.gif" width="112" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Einstieg in C++" title="Zum Katalog: Einstieg in C++"><br /><br /><br /><br /><br /><br /><br />&nbsp;Einstieg in C++</a><br /><br /></td>
</tr>
<tr>
<td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/2156?GPP=opc3">
<img src="common/9783836214292_s.gif" width="113" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: C++ von A bis Z" title="Zum Katalog: C++ von A bis Z"><br /><br /><br /><br /><br /><br /><br />&nbsp;C++ von A bis Z</a><br /><br /></td>
</tr>
<tr>
<td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/1299?GPP=opc3">
<img src="common/9783898428392_s.gif" width="113" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: C/C++" title="Zum Katalog: C/C++"><br /><br /><br /><br /><br /><br /><br />&nbsp;C/C++</a><br /><br /></td>
</tr>
<tr>
<td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/1712?GPP=opc3">
<img src="common/9783836211574_s.gif" width="113" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Shell-Programmierung" title="Zum Katalog: Shell-Programmierung"><br /><br /><br /><br /><br /><br /><br />&nbsp;Shell-Programmierung</a><br /><br /></td>
</tr>
<tr>
<td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/2049?GPP=opc3">
<img src="common/9783836213660_s.gif" width="119" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Linux-UNIX-Programmierung" title="Zum Katalog: Linux-UNIX-Programmierung"><br /><br /><br /><br /><br /><br /><br />&nbsp;Linux-UNIX-<br />&nbsp;Programmierung</a><br /><br /></td>
</tr>
<tr>
<td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/2138?GPP=opc3">
<img src="common/9783836214209_s.gif" width="107" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: IT-Handbuch für Fachinformatiker" title="Zum Katalog: IT-Handbuch für Fachinformatiker"><br /><br /><br /><br /><br /><br /><br />&nbsp;IT-Handbuch für <br />&nbsp;Fachinformatiker</a><br /><br /></td>
</tr>
<tr>
<td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/2165?GPP=opc3">
<img src="common/9783836214391_s.gif" width="119" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Ubuntu GNU/Linux" title="Zum Katalog: Ubuntu GNU/Linux"><br /><br /><br /><br /><br /><br /><br />&nbsp;Ubuntu GNU/Linux</a><br /><br /></td>
</tr>
<tr>
<td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/1628?GPP=opc3">
<img src="common/9783836211161_s.gif" width="117" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Coding for Fun" title="Zum Katalog: Coding for Fun"><br /><br /><br /><br /><br /><br /><br /><br />&nbsp;Coding for Fun&nbsp;</a><br /><br /></td>
</tr>
</table></td>
</tr>
<tr>
<td><img src="common/leer.gif" height="2" width="1" border="0" /></td>
</tr>
<tr>
<td>
<table border="0" cellpadding="0" cellspacing="0" width="100%">
<tr>
<td class="tbl2" height="20" colspan="2"><strong>&nbsp;Shopping</strong></td>
</tr>
<tr>
<td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td>
<td valign="top">
<table cellspacing="3">
<tr>
<td><b>Versandkostenfrei</b> bestellen in Deutschland und &Ouml;sterreich<br /><a href="http://www.galileocomputing.de/hilfe/Shop/?GPP=opc3"><img src="common/pfeil_rechts5.gif" border="0" alt="Info">Info</a><br /><br /></td>
</tr>
</table>
</td>
</tr>
</table>
</td>
</tr>
</table>
</td>
</tr>
</table><br><br><hr width="70%" align="center">
<div align="center">
<p class="standard"><strong>Copyright © Galileo Press 2009</strong><br>
        Für Ihren privaten Gebrauch dürfen Sie die Online-Version natürlich ausdrucken.
        Ansonsten unterliegt das &lt;openbook&gt; denselben Bestimmungen, wie die
        gebundene Ausgabe: Das Werk einschließlich aller seiner Teile ist urheberrechtlich
        geschützt. Alle Rechte vorbehalten einschließlich der Vervielfältigung, Übersetzung,
        Mikroverfilmung sowie Einspeicherung und Verarbeitung in elektronischen Systemen.</p><br><a href="http://www.galileocomputing.de/">[Galileo Computing]</a><br><br>
      Galileo Press, Rheinwerkallee 4, 53227 Bonn, Tel.: 0228.42150.0, Fax 0228.42150.77, <a href="mailto:info@galileo-press.de">info@galileo-press.de</a></div><br><br></body>
</html>
