<html>
<head>
<META http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title>Galileo Computing :: C von A bis Z &ndash; 23.11 CGI-Eingabe</title>
<meta name="title" content="Galileo Computing :: C von A bis Z - 23.11 CGI-Eingabe">
<meta name="author" content="J&uuml;rgen Wolf ">
<meta name="publisher" content="Galileo Press 2009">
<meta name="copyright" content="Galileo Press 2009">
<meta name="Description" content="C von A bis Z - Das umfassende Handbuch &ndash; 23.11 CGI-Eingabe">
<meta name="audience" content="Alle">
<meta name="robots" content="INDEX,FOLLOW">
<meta http-equiv="content-language" content="de">
<link rel="stylesheet" type="text/css" href="common/galileo_open.css">
<link rel="prev" href="023_c_cgi_010.htm">
<link rel="next" href="023_c_cgi_012.htm"><script type="text/javascript"><!--
    function OpenWin(url,name,height,width)
    {
      var InfoWin = window.open(url,name,"directories=0,height="+height+",width=" + width + ",hotkeys=0,location=0,menubar=0,resizable=1,screenX=150,screenY=10,left=150,top=10,scrollbars=1,status=1,titlebar=0,toolbar=0");
      InfoWin.focus();
    }
    //--></script><link href="common/prettify.css" type="text/css" rel="stylesheet"><script type="text/javascript" src="common/prettify.js"></script></head>
<body vlink="#000099" link="#000099" alink="#000099" onload="prettyPrint()">
<table width="100%" border="0" cellpadding="0" cellspacing="0" bgcolor="#000066">
<tr>
<td height="74" valign="bottom" colspan="2"><a href="http://www.galileocomputing.de/katalog/openbook?GPP=opc3"><img src="common/galileocomputing_openbook.gif" width="200" height="56" border="0" alt="Galileo Computing < openbook >" title="Galileo Computing < openbook >"></a></td>
<td width="80" height="74"><a href="http://www.galileocomputing.de/?GPP=opc3"><img src="common/galileocomputing.gif" border="0" alt="Galileo Computing - Professionelle Bücher. Auch für Einsteiger." title="Galileo Computing - Professionelle Bücher. Auch für Einsteiger."></a></td>
</tr>
</table>
<div align="right"><a href="http://www.galileocomputing.de/?GPP=opc3" class="navnav">Professionelle Bücher. Auch für Einsteiger.</a></div><br><table class="tbl" border="0" cellpadding="0" cellspacing="0" width="100%">
<tr>
<td width="190" valign="top">
<table class="tbl1" border="0" cellpadding="3" cellspacing="0" width="190" align="left">
<tr>
<td class="tbl2"><a class="nav" href="index.htm#_top">Inhaltsverzeichnis</a></td>
</tr>
<tr>
<td><a class="navnav" href="000_c_vorwort_001.htm#mj764cb3fd439d3b95d1843e7c7d17f235">Vorwort</a></td>
</tr>
<tr>
<td><a class="navnav" href="000_c_vorwort_gutachter_001.htm#mj3d41cb339c9b2fc1d6e99cdaa93c3860">Vorwort des Gutachters</a></td>
</tr>
<tr>
<td><a class="navnav" href="001_c_einstieg_in_c_001.htm#mja24d93ff97bb42dbebf4689160c45195">1 Einstieg in C</a></td>
</tr>
<tr>
<td><a class="navnav" href="002_c_das_erste_programm_001.htm#mj2604a667cc98d3fa2178751273346b91">2 Das erste Programm</a></td>
</tr>
<tr>
<td><a class="navnav" href="003_c_grundlagen_001.htm#mj7ac54ba315b94149806c1de3fc89ee7f">3 Grundlagen</a></td>
</tr>
<tr>
<td><a class="navnav" href="004_c_ein_ausgabe_001.htm#mj20c131820fbfb1497afd796ee443599e">4 Formatierte Ein-/Ausgabe mit »scanf()« und »printf()«</a></td>
</tr>
<tr>
<td><a class="navnav" href="005_c_basisdatentypen_001.htm#mjeda2957449ddc812dad62b400fe57752">5 Basisdatentypen</a></td>
</tr>
<tr>
<td><a class="navnav" href="006_c_operatoren_001.htm#mjab3693b096d581607801a36ce88905fc">6 Operatoren</a></td>
</tr>
<tr>
<td><a class="navnav" href="007_c_typumwandlung_001.htm#mj5c5e497ac2ab4367fe9df0ffd218cfca">7 Typumwandlung</a></td>
</tr>
<tr>
<td><a class="navnav" href="008_c_kontrollstrukturen_001.htm#mjc7bf6f584a2fe20b4c5f6b16ba15d57d">8 Kontrollstrukturen</a></td>
</tr>
<tr>
<td><a class="navnav" href="009_c_funktionen_001.htm#mj7893101be51aa469fe52334038acd465">9 Funktionen</a></td>
</tr>
<tr>
<td><a class="navnav" href="010_c_praeprozessor_001.htm#mjacdd200a20163a4d3fa418b6cb95763e">10 Präprozessor-Direktiven</a></td>
</tr>
<tr>
<td><a class="navnav" href="011_c_arrays_001.htm#mje29de26c54a3884f7316cbbb2a073ad8">11 Arrays</a></td>
</tr>
<tr>
<td><a class="navnav" href="012_c_zeiger_001.htm#mjee28a882ef9125d2c4cc49121b2c65c1">12 Zeiger (Pointer)</a></td>
</tr>
<tr>
<td><a class="navnav" href="013_c_kommandozeilenargumente_001.htm#mjf6a9e42fa3bc25b2b1e06270e7bf8f68">13 Kommandozeilenargumente</a></td>
</tr>
<tr>
<td><a class="navnav" href="014_c_dyn_speicherverwaltung_001.htm#mj8d062301d2449b13710f1484d499cd9b">14 Dynamische Speicherverwaltung</a></td>
</tr>
<tr>
<td><a class="navnav" href="015_c_strukturen_001.htm#mj5e146ba18168113a5c645cd2d07c4ec8">15 Strukturen</a></td>
</tr>
<tr>
<td><a class="navnav" href="016_c_ein_ausgabe_funktionen_001.htm#mj136f9ac6b5b7c440aafe5010411ef011">16 Ein-/Ausgabe-Funktionen</a></td>
</tr>
<tr>
<td><a class="navnav" href="017_c_dateien_verzeichnisse_001.htm#mj9f81aea722a9edb8d0080df81eb9402c">17 Attribute von Dateien und das Arbeiten mit Verzeichnissen (nicht ANSI C)</a></td>
</tr>
<tr>
<td><a class="navnav" href="018_c_stdarg_h_001.htm#mj9d64febdc46a1375e5c4498b17154e30">18 Arbeiten mit variabel langen Argumentlisten &#8211; &lt;stdarg.h&gt;</a></td>
</tr>
<tr>
<td><a class="navnav" href="019_c_zeitroutinen_001.htm#mj0a8102e96a1297bd767ac7274e069f0f">19 Zeitroutinen</a></td>
</tr>
<tr>
<td><a class="navnav" href="020_c_headerdateien_001.htm#mjf3caede8ebd504dc6b7454b297c251e8">20 Weitere Headerdateien und ihre Funktionen (ANSI C)</a></td>
</tr>
<tr>
<td><a class="navnav" href="021_c_dyn_datenstrukturen_001.htm#mja75ba2f4ab8f95e9e321d195c1e26d76">21 Dynamische Datenstrukturen</a></td>
</tr>
<tr>
<td><a class="navnav" href="022_c_algorithmen_001.htm#mj07afe6f332eab2e8168da2f69f7b31c4">22 Algorithmen</a></td>
</tr>
<tr>
<td><a class="navh" href="##mj6c4219b4e615fa24deaa57d5c3d04db8">23 CGI mit C</a></td>
</tr>
<tr>
<td><a class="navnav" href="024_c_mysql_001.htm#mj12dab301033f9fd856aa739270c45e08">24 MySQL und C</a></td>
</tr>
<tr>
<td><a class="navnav" href="025_c_netzwerkprogrammierung_001.htm#mja8101c6e0e4cb2e6fd8312114dad30d7">25 Netzwerkprogrammierung und Cross&ndash;Plattform-Entwicklung</a></td>
</tr>
<tr>
<td><a class="navnav" href="026_c_paralleles_rechnen_001.htm#mj710dc0ad851d57e60533f8797ff9c1e6">26 Paralleles Rechnen</a></td>
</tr>
<tr>
<td><a class="navnav" href="027_c_sicheres_programmieren_001.htm#mj13eba8f9d68ac8414bffaa3a1b24ec31">27 Sicheres Programmieren</a></td>
</tr>
<tr>
<td><a class="navnav" href="028_c_weiterfuehrendes_001.htm#mj3e65f750149ade087925f303b3871af9">28 Wie geht&#8217;s jetzt weiter?</a></td>
</tr>
<tr>
<td><a class="navnav" href="029_c_anhang_a_001.htm#mjec9bf1c5e3fe2e46047c2f9c7aa9c531">A Operatoren</a></td>
</tr>
<tr>
<td><a class="navnav" href="030_c_anhang_b_001.htm#mj803443bb6e7546011c48e6e57fbdbb64">B Die C-Standard-Bibliothek</a></td>
</tr>
<tr>
<td><a class="navnav" href="stichwort.htm#_top">Stichwort</a></td>
</tr>
<tr>
<td><br><a href="http://download.galileo-press.de/openbook/c_von_a_bis_z/galileocomputing_c_von_a_bis_z.zip" class="navnav"><strong>Download:</strong><br>- ZIP, ca. 10,6 MB</a></td>
</tr>
<tr>
<td><a href="http://www.galileocomputing.de/2132?GPP=opc3" class="navnav">Buch bestellen</a></td>
</tr>
<tr>
<td><a class="navnav" href="#kommentar">Ihre Meinung?</a><br><br></td>
</tr>
</table>
</td>
<td width="10"><img src="common/spacer10.gif" width="10" height="10" alt="Spacer"></td>
<td width="85%" valign="top" align="center"><div align="center">
<table width="98%" border="0" cellspacing="0" cellpadding="0" bgcolor="#FFFFFF">
<tr>
<td width="100%" class="start" colspan="1" height="22" align="center"><table width="100%" border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="25%"><a href="023_c_cgi_010.htm" class="navnav"> &lt;&lt;   zurück</a></td>
<td width="49%"><div align="center"><a href="http://www.galileocomputing.de/?GPP=opc3" class="navnav">Galileo Computing</a> / <a href="http://www.galileocomputing.de/katalog/openbook/?GPP=opc3" class="navnav">&lt;openbook&gt;</a> / <a href="index.htm" class="navnav"> C von A bis Z</a></div></td>
<td align="right" width="25%"><div align="right"><a href="023_c_cgi_012.htm" class="navnav">vor   &gt;&gt; </a></div></td>
</tr>
</table></td>
</tr>
<tr>
<td width="100%" valign="top"><table width="100%" border="0" cellpadding="10" cellspacing="0" class="box">
<tr>
<td colspan="2"><a href="http://www.galileocomputing.de/2132?GPP=opc3" class="buchtitel">C von A bis Z</a><span class="autor"> von J&uuml;rgen Wolf </span><br><span class="untertitel">Das umfassende Handbuch</span></td>
</tr>
<tr>
<td valign="top" width="211"><dl>
<dt><a href="http://www.galileocomputing.de/2132?GPP=opc3" class="navnav"><img src="common/9783836214117.gif" border="0" alt="Buch: C von A bis Z" title="Buch: C von A bis Z"></a></dt>
<dd><br><a href="http://www.galileocomputing.de/2132?GPP=opc3"><span class="autor"><strong>C von A bis Z</strong><br>3., aktualisierte und erweiterte Auflage, geb., mit CD und Referenzkarte<br>1.190 S., 39,90 Euro<br>Galileo Computing<br>ISBN 978-3-8362-1411-7</span></a></dd>
</dl></td>
<td width="80%"><table border="0">
<tr>
<td valign="baseline"><img src="common/pfeil_u.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="3" class="kap"><strong><a href="023_c_cgi_001.htm#mj6c4219b4e615fa24deaa57d5c3d04db8" class="navnav">23 CGI mit C</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="023_c_cgi_001.htm#mj753bda1c0feeb96471a6fd3507e78471" class="navnav">23.1 Was ist CGI?</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="023_c_cgi_002.htm#mj1c41e4288dfdb0c00282e7f355aeaa9f" class="navnav">23.2 Vorteile von CGIs in C</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="023_c_cgi_003.htm#mjba994bed8bd4ef92ec7942f9d4bf360f" class="navnav">23.3 Andere Techniken der Webprogrammierung</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="023_c_cgi_004.htm#mje31b0468de9a6775e240739f74c869b2" class="navnav">23.4 Das dreistufige Webanwendungsdesign</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="023_c_cgi_004.htm#mj784201c3d2f30eccccfea683d0cf7bf6" class="navnav">23.4.1 Darstellungsschicht</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="023_c_cgi_004.htm#mje39605f3b437d685802be297b35155a9" class="navnav">23.4.2 Verarbeitungsschicht</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="023_c_cgi_004.htm#mj7d321c39df88af1ebf71b508407fce6b" class="navnav">23.4.3 Speicherschicht</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="023_c_cgi_005.htm#mjb28b02e3339269fcd271c6805808d095" class="navnav">23.5 Clientseitige Programmierung</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="023_c_cgi_005.htm#mj5a8f8115ea7f290fec7e4d69744df07d" class="navnav">23.5.1 JavaScript</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="023_c_cgi_005.htm#mj74dc3ff9efbe0425db8caf4228c62ea3" class="navnav">23.5.2 Java-Applets</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="023_c_cgi_006.htm#mjae9786f0e8b66329366dd5020d11ea24" class="navnav">23.6 Serverseitige Programmierung</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="023_c_cgi_007.htm#mj953622e10f930a8262378a3b8d1af353" class="navnav">23.7 Der Webserver</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="023_c_cgi_007.htm#mj1275ef287ecf27bd23a407e1df4d8bee" class="navnav">23.7.1 Das Client/Server-Modell des Internets</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="023_c_cgi_007.htm#mje745ab77530f29271e1cf393659c1ee3" class="navnav">23.7.2 Serverimplementierung</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="023_c_cgi_007.htm#mj7456a25fa957c5d5c1e6fb6f1b8e51ac" class="navnav">23.7.3 Hosting-Services</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="023_c_cgi_007.htm#mj03fcae8d34e70f2bd333a6b103a37aa8" class="navnav">23.7.4 Schlüsselfertige Lösung</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="023_c_cgi_007.htm#mjce2ea6f4ed0702c32f081bae27e68360" class="navnav">23.7.5 Weitere Möglichkeiten</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="023_c_cgi_007.htm#mj464e0e321247e44496cedab2c842ea5b" class="navnav">23.7.6 Apache</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="023_c_cgi_008.htm#mj2b0939e8af690d0ec6266500fedc9ffa" class="navnav">23.8 Das HTTP-Protokoll</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="023_c_cgi_008.htm#mj8a70459247f5ba115f4a5fa93400236e" class="navnav">23.8.1 Web-Protokolle</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="023_c_cgi_008.htm#mj24b27af5edc8278f18e4df88f534d77c" class="navnav">23.8.2 Wozu dienen Protokolle?</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="023_c_cgi_008.htm#mj491046404289233a9e9e8df32c1a4f89" class="navnav">23.8.3 Was ist ein Protokoll?</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="023_c_cgi_008.htm#mj94e75d737d6c99f0eb1b40a87775a1cc" class="navnav">23.8.4 Normen für die Netzwerktechnik</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="023_c_cgi_008.htm#mjb7232dd442661d7ce111749a1b172adc" class="navnav">23.8.5 Das OSI-Schichtenmodell</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="023_c_cgi_008.htm#mj6eeb35459ee40823c55526c0d43f34d6" class="navnav">23.8.6 Die Elemente einer URL</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="023_c_cgi_008.htm#mj5bb5e909c12c5816dad92a19681c031c" class="navnav">23.8.7 Client-Anfrage &#8211; HTTP-Request (Browser-Request)</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="023_c_cgi_008.htm#mj09828f14735c9eb1238f74eca50e06d3" class="navnav">23.8.8 Serverantwort (Server-Response)</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="023_c_cgi_008.htm#mjd01b8cb558fb8718dbd7f11163871d91" class="navnav">23.8.9 Zusammenfassung</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="023_c_cgi_009.htm#mj55aa43d3854686f279b9a2995d0e7856" class="navnav">23.9 Das Common Gateway Interface (CGI)</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="023_c_cgi_009.htm#mj84eb3b3a8b994c00e61cceeb82845a62" class="navnav">23.9.1 Filehandles</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="023_c_cgi_009.htm#mj8a88b70c9ea857f625bc33cf9111ab38" class="navnav">23.9.2 CGI-Umgebungsvariablen</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="023_c_cgi_009.htm#mj092417d7813dd1c70bcbc7e9ae741468" class="navnav">23.9.3 CGI-Ausgabe</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="023_c_cgi_010.htm#mj4dff274d0bc1fff0b99f596c9b5bfd82" class="navnav">23.10 HTML-Formulare</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="023_c_cgi_010.htm#mjd677b465f7e12e59f34b1617b357ef76" class="navnav">23.10.1 Die Tags und ihre Bedeutung</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="#mj2b0c7c08b2e6bbf223343aa9f7d5fbd6" class="navh">23.11 CGI-Eingabe</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="#mj7c6f1fbfc9dccbb876a35161a36a02bb" class="navh">23.11.1 Die Anfrage des Clients an den Server</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="#mj3200134c102e6d9fe1294ab668e2e386" class="navh">23.11.2 Eingabe parsen</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="023_c_cgi_012.htm#mjb5dc8d227df3a4a3853d41b01ce13059" class="navnav">23.12 Ein Gästebuch</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="023_c_cgi_012.htm#mj82f7f5f2569036a3b2bc8403beeeb7dc" class="navnav">23.12.1 Das HTML-Formular (»guestbook.html«)</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="023_c_cgi_012.htm#mj7c61b8637748679b60117a0df0706a56" class="navnav">23.12.2 Das CGI-Programm (»auswert.cgi«)</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="023_c_cgi_012.htm#mjbea5f4c766c0367a2d9a61bdcf1a50a6" class="navnav">23.12.3 Das HTML-Gästebuch (»gaeste.html«)</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="023_c_cgi_013.htm#mj55d5fdaf89ed49f761a7c0d097b650ad" class="navnav">23.13 Ausblick</a></strong></td>
</tr>
</table><br></td>
</tr>
</table>
<table width="100%" cellpadding="20" cellspacing="0" border="0" bgcolor="#eeeeee">
<tr>
<td><div class="main"><a id="mj2b0c7c08b2e6bbf223343aa9f7d5fbd6" name="mj2b0c7c08b2e6bbf223343aa9f7d5fbd6"></a><a name="t21"></a><a name="t2t31"></a><br><div align="center"><a href="#top"><img src="common/jupiters.gif" border="0" alt="Galileo Computing - Zum Seitenanfang"></a></div>
<h2 class="t2"><span class="cfett">23.11</span><span class="cfett"> CGI-Eingabe</span>  <a href="#t2t32"><img src="common/down.gif" width="15" height="15" border="0" alt="Zur nächsten Überschrift"></a><img src="common/15x15leer.gif" width="15" height="15" border="0" alt="Zur vorigen Überschrift"></h2><a id="mj7c6f1fbfc9dccbb876a35161a36a02bb" name="mj7c6f1fbfc9dccbb876a35161a36a02bb"></a><a name="t31"></a><br><div align="center"><a href="#top"><img src="common/jupiters.gif" border="0" alt="Galileo Computing - Zum Seitenanfang"></a></div><a name="t2t32"></a><h3 class="t3"><span class="cfett">23.11.1</span><span class="cfett"> Die Anfrage des Clients an den Server</span>  <a href="#t2t33"><img src="common/down.gif" width="15" height="15" border="0" alt="Zur nächsten Überschrift"></a><a href="#t2t31"><img src="common/top.gif" width="15" height="15" border="0" alt="Zur vorigen Überschrift"></a></h3>
<p>In den Abschnitten zur Client-Anfrage und zu den Formular-Tags habe ich die zwei vorwiegend in der Praxis eingesetzten Methoden zum Empfangen von Daten schon erwähnt (<span class="clisting">POST</span>, <span class="clisting">GET</span>). Diese Methoden werde ich jetzt anhand des folgenden HTML-Formulars genauer erläutern:</p>
<div class="listing"><pre class="prettyprint">&lt;html&gt;
&lt;head&gt;
&lt;title&gt;Eine einfache Auswertung&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;h1&gt;&lt;center&gt;
&lt;b&gt;&lt;u&gt;Formular&lt;/u&gt;&lt;/b&gt;&lt;/center&gt;&lt;/h1&gt;&lt;br&gt;&lt;br&gt;<span class="cfett">
&lt;form action=<a href="http://localhost/cgi-bin/auswert.cgi">http://localhost/cgi-bin/auswert.cgi</a> method=get&gt;</span>
  <span class="cfett"> &lt;center&gt;&lt;b&gt;Bitte geben Sie Ihren Namen ein :&lt;/b&gt;&lt;br&gt;</span>
  <span class="cfett"> &lt;input name="Textfeld" size="20"&gt; &lt;/input&gt;</span>
  <span class="cfett"> &lt;input type=submit value="abschicken"&gt;&lt;/center&gt;
&lt;/form&gt;</span>
&lt;/body&gt;
&lt;/html&gt;</pre></div>
<p>So sieht es aus:</p>
<div class="bildbox">
<p><a name="IDA0QUQ"></a><a onClick="OpenWin('bilder/23_020.gif','Abbildung',800,800)"><img border="0" src="bilderklein/klein23_020.gif" alt="Abbildung"><br><span class="tabunter">Hier klicken, um das Bild zu vergrößern</span></a></p>
</div>
<p class="tabunter"><strong>Abbildung 23.20    </strong>Eingabeformular</p>
<p>Von ganz besonderem Interesse ist hier das <span class="clisting">&lt;form&gt;</span>-Tag. Sobald Sie auf den Button <span class="kapitalchen">abschicken</span> klicken, wird mit dem Attribut <span class="clisting">action</span> ein Prozess, nämlich die CGI-Anwendung <span class="ckursiv">auswert.cgi</span>, auf dem Webserver gestartet. Darin unterscheiden sich beide Methoden nicht. Da im HTML-Beispiel hier die Methode <span class="clisting">GET</span> (<span class="clisting">method=get</span>) verwendet wurde, soll diese auch als Erste behandelt werden.</p>
<h4 class="t4"><span class="cfett">Arbeitsweise von GET</span></h4>
<p>Bei der <span class="clisting">GET</span>-Methode hängt der Browser die Zeichenkette am Ende der URL an. Bei einer Eingabe der Zeichenkette <span class="clisting">"hallo"</span> hat die URL folgendes Aussehen:</p>
<div class="listing"><pre class="prettyprint"><a href="http://localhost/cgi-bin/auswert.cgi?Textfeld=hallo">http://localhost/cgi-bin/auswert.cgi?Textfeld=hallo</a></pre></div>
<p>Der Webserver ist jetzt dafür verantwortlich, diese Zeichenkette wieder zu entfernen, und übergibt diese an die Umgebungsvariable <span class="clisting">QUERY_STRING</span>:</p>
<div class="listing"><pre class="prettyprint">QUERY_STRING = Textfeld=hallo</pre></div>
<p>Jetzt sind Sie an der Reihe, mit dem CGI-Programm die Umgebungsvariable <span class="clisting">QUERY_STRING</span> auszuwerten. Die <span class="clisting">GET</span>-Möglichkeit stellt dabei die einfachste Art dar. Es herrscht hierbei immer noch der Irrglaube, dass mit der <span class="clisting">GET</span>-Methode nur 255 bzw. 1024 Bytes verarbeitet werden können. Diese Größe wird aber vom Webserver vorgegeben und beträgt mindestens 255 Bytes bis zu 8192 Bytes.</p>
<h4 class="t4"><span class="cfett">Arbeitsweise von POST</span></h4>
<p>Wollen Sie statt der Methode <span class="clisting">GET</span> die Methode <span class="clisting">POST</span> verwenden, müssen Sie nur im HTML-Formular die Zeile</p>
<div class="listing"><pre class="prettyprint">&lt;form action="http://... /cgi-bin/auswert.cgi" method=get&gt;</pre></div>
<p>umändern in:</p>
<div class="listing"><pre class="prettyprint">&lt;form action="http://.. /cgi-bin/auswert.cgi"<span class="cfett"> method=post</span> &gt;</pre></div>
<p>Bei der <span class="clisting">POST</span>-Methode werden die Daten nicht in einer der Umgebungsvariablen abgelegt, sondern in der Standardeingabe (<span class="clisting">stdin</span>). Sie können somit die CGI-Anwendung so schreiben, als würde die Eingabe von der Tastatur gemacht. Die Länge des kodierten Strings befindet sich in der Umgebungsvariablen <span class="clisting">CONTENT_LENGTH</span>.</p>
<p>Außerdem wird noch die Umgebungsvariable <span class="clisting">CONTENT_TYPE</span> verwendet, damit die CGI-Anwendung weiß, um was für eine Art Dokument es sich handelt.</p>
<h4 class="t4"><span class="cfett">POST- oder GET-Methode programmtechnisch auswerten</span></h4>
<p>Damit die CGI-Anwendung jetzt weiß, ob die Daten mit der Methode <span class="clisting">GET</span> oder <span class="clisting">POST</span> gesendet wurden, benötigen Sie eine Funktion, die die Umgebungsvariable <span class="clisting">REQUEST_METHOD</span> auswertet und den Inhalt (String), sei es nun vom <span class="clisting">QUERY_STRING</span> oder von der Standardeingabe, an den Aufrufer zurückgibt.</p>
<div class="listing"><pre class="prettyprint">/*  Funktion liest Daten in der POST- oder GET-Methode ein.
 *  Rückgabewert: String puffer mit den Daten

 *  bei Fehler  : NULL
*/
char *getdata(void) {
   unsigned long size;
   char *puffer = NULL;
   char *request = getenv("REQUEST_METHOD");
   char *cont_len;
   char *cgi_string;

   /* zuerst die Request-Methode überprüfen */
   if(  NULL == request )
      return NULL;
   else if( strcmp(request, "GET") == 0 ) {
      /* die Methode GET -&gt; Query String abholen */
      cgi_string = getenv("QUERY_STRING");
      if( NULL == cgi_string )
         return NULL;
      else {
         puffer =(char *) Strdup(cgi_string);
         return puffer; /* Rückgabewert an den Aufrufer */
      }
   }
   else if( strcmp(request, "POST") == 0 ) {
      /* die Methode POST -&gt; Länge des Strings
       * ermitteln (CONTENT_LENGTH) */
      cont_len = getenv("CONTENT_LENGTH");
      if( NULL == cont_len)
         return NULL;
      else {
         /* String CONTENT_LENGTH in
          * unsigned long umwandeln */
         size = (unsigned long) atoi(cont_len);
         if(size &lt;= 0)
            return NULL; /* Keine Eingabe!?!? */
      }
      /* jetzt lesen wir die Daten von stdin ein */
      puffer = (char *) malloc(size+1);
      if( NULL == puffer )
         return NULL;
      else {
         if( NULL == fgets(puffer, size+1, stdin) ) {
            free(puffer);
            return NULL;
         }
         else  /* Rückgabewerte an den Ausrufer */
            return puffer;
      }
   }
   else /*  Weder die GET- noch die POST-Methode
         *  wurden verwendet. */
      return NULL;
}

/*  Da die Funktion strdup() in der Headerdatei &lt;string.h&gt; keine
 *  ANSI-C-Funktion ist, schreiben wir eine eigene.
 */
char *Strdup(const char *str) {
   char *p;

   if(NULL == str)
      return NULL;
   else {
      p = malloc(strlen(str)+1);
      if(NULL == p)
         return NULL;
      else
         strcpy(p, str);
   }
   return p;
}</pre></div>
<p>Es wurde außerdem eine extra Funktion für <span class="clisting">Strdup()</span> geschrieben, da die vorhandene <span class="clisting">strdup()</span> in der Headerdatei <span class="ckursiv">&lt;string.h&gt;</span> nicht zum ANSI-C-Standard gehört. Sie können diese eben erstellten Funktionen gern in einer CGI-Anwendung testen und ausführen. Falls Sie die CGI-Anwendung getestet und etwa folgende Eingabe in einem Webformular gemacht haben:</p>
<div class="listing"><pre class="prettyprint">Jürgen "pronix" Wolf</pre></div>
<p>erscheint anschließend im Webbrowser folgende Zeile:</p>
<div class="listing"><pre class="prettyprint">Textfeld=J%FCrgen+%22pronix%22+Wolf</pre></div>
<p>Wir sind also noch ein wenig vom gewünschten Ergebnis entfernt.</p><a id="mj3200134c102e6d9fe1294ab668e2e386" name="mj3200134c102e6d9fe1294ab668e2e386"></a><a name="t32"></a><br><div align="center"><a href="#top"><img src="common/jupiters.gif" border="0" alt="Galileo Computing - Zum Seitenanfang"></a></div><a name="t2t33"></a><h3 class="t3"><span class="cfett">23.11.2</span><span class="cfett"> Eingabe parsen</span>  <img src="common/15x15leer.gif" width="15" height="15" border="0" alt="top"><a href="#t2t32"><img src="common/top.gif" width="15" height="15" border="0" alt="Zur vorigen Überschrift"></a></h3>
<p>Sie können zwar jetzt die Eingabe vom Client empfangen, aber Sie müssen den String noch lesefreundlich dekodieren. Hier folgt ein Überblick zu den Zeichen, die eine besondere Bedeutung haben und die Sie als Programmierer von CGI-Anwendungen berücksichtigen müssen.</p>
<ul class="gp">
<li><span class="clisting">&amp;</span> &#8211; Die einzelnen Formularelemente (sofern es mehrere sind) werden mit diesem Zeichen getrennt.</li>
</ul>
<ul class="gp">
<li><span class="clisting">=</span> &#8211; Mit diesem Zeichen werden die Variable/Wert-Paare voneinander getrennt.</li>
</ul>
<blockquote>
<div class="listing"><pre class="prettyprint">Textfeld J%FCrgen+%22pronix%22+Wolf</pre></div>
</blockquote>
<ul class="gp">
<li><span class="clisting">+</span> &#8211; Damit werden die Leerzeichen der eingegebenen Daten getrennt.</li>
</ul>
<blockquote>
<div class="listing"><pre class="prettyprint">Textfeld J%Fcrgen %22pronix%22 Wolf</pre></div>
</blockquote>
<ul class="gp">
<li><span class="clisting">%XX</span> &#8211; Bei einem Prozentzeichen, auf das zwei hexadezimale Ziffern folgen, handelt es sich um ASCII-Zeichen mit dem dezimalen Wert von 128 bis 255. Diese hexadezimalen Ziffern müssen in ASCII-Zeichen dekodiert werden.</li>
</ul>
<blockquote>
<div class="listing"><pre class="prettyprint">Textfeld Jürgen pronix Wolf</pre></div>
</blockquote>
<p>In Tabelle 23.18 finden Sie Steuerzeichen und weitere Zeichen sowie ihre hexadezimale Darstellung im Überblick:</p><br><table width="100%" border="0" cellspacing="1" cellpadding="3">
<caption class="tabunter"><p class="ptabunter"><strong>Tabelle 23.18    </strong>Kodierte Zeichen und ihre Bedeutung</p>
</caption>
<tr>
<td class="tabellenkopf"><span class="cfett">Zeichen</span>
</td>
<td class="tabellenkopf"><span class="cfett">Hexadezimale Darstellung</span>
</td>
</tr>
<tr>
<td class="tabellentext">
<p>Tab</p>
</td>
<td class="tabellentext">
<p>%09</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<p>Space</p>
</td>
<td class="tabellentext">
<p>%20</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<p>"</p>
</td>
<td class="tabellentext">
<p>%22</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<p>#</p>
</td>
<td class="tabellentext">
<p>%23</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<p>%</p>
</td>
<td class="tabellentext">
<p>%25</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<p>&amp;</p>
</td>
<td class="tabellentext">
<p>%26</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<p>(</p>
</td>
<td class="tabellentext">
<p>%28</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<p>)</p>
</td>
<td class="tabellentext">
<p>%29</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<p>'</p>
</td>
<td class="tabellentext">
<p>%2C</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<p>.</p>
</td>
<td class="tabellentext">
<p>%2E</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<p>/</p>
</td>
<td class="tabellentext">
<p>%2F</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<p>:</p>
</td>
<td class="tabellentext">
<p>%3A</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<p>;</p>
</td>
<td class="tabellentext">
<p>%3B</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<p>&lt;</p>
</td>
<td class="tabellentext">
<p>%3C</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<p>=</p>
</td>
<td class="tabellentext">
<p>%3D</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<p>&gt;</p>
</td>
<td class="tabellentext">
<p>%3E</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<p>?</p>
</td>
<td class="tabellentext">
<p>%3F</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<p>@</p>
</td>
<td class="tabellentext">
<p>%40</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<p>[</p>
</td>
<td class="tabellentext">
<p>%5B</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<p>\</p>
</td>
<td class="tabellentext">
<p>%5C</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<p>]</p>
</td>
<td class="tabellentext">
<p>%5D</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<p>^</p>
</td>
<td class="tabellentext">
<p>%5E</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<p>,</p>
</td>
<td class="tabellentext">
<p>%60</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<p>{</p>
</td>
<td class="tabellentext">
<p>%7B</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<p>|</p>
</td>
<td class="tabellentext">
<p>%7C</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<p>}</p>
</td>
<td class="tabellentext">
<p>%7D</p>
</td>
</tr>
<tr>
<td class="tabellentext">
<p>~</p>
</td>
<td class="tabellentext">
<p>%7E</p>
</td>
</tr>
</table><br><p>Jetzt wollen Sie natürlich auch wissen, wie Sie dies in der Praxis dekodieren können. Folgende Funktionen sind dazu zunächst nötig:</p>
<ul class="gp">
<li>kodierte Zeichen (Prozentzeichen, gefolgt von zwei Hexzahlen) dekodieren</li>
</ul>
<ul class="gp">
<li>alle Leerzeichen, die mit <span class="clisting">+</span> angegeben sind, in ein echtes Leerzeichen konvertieren</li>
</ul>
<p>Alle anderen Schritte folgen in den nächsten Funktionen. Betrachten wir zunächst die Funktionen, mit denen die hexadezimalen Zahlen in ASCII-Werte und die <span class="clisting">+</span>-Zeichen in echte Leerzeichen konvertiert werden:</p>
<div class="listing"><pre class="prettyprint">/* Wandelt einzelne Hexzeichen (%xx) in ASCII-Zeichen
 * und kodierte Leerzeichen (+) in echte Leerzeichen um. */
void hex2ascii(char *str)  {
   int x, y;


   for(x=0,y=0; str[y] != '\0'; ++x,++y) {
      str[x] = str[y];
      /* Ein hexadezimales Zeichen? */
      if(str[x] == '%')  {
         str[x] = convert(&amp;str[y+1]);
         y += 2;
      }
      /* Ein Leerzeichen? */
      else if( str[x] == '+')
         str[x]=' ';
   }
   /* geparsten String sauber terminieren */
   str[x] = '\0';
}

/* Funktion konvertiert einen String von zwei hexadezimalen
 * Zeichen und gibt das einzelne dafür stehende Zeichen zurück. */
char convert(char *hex) {
   char ascii;

   /* erster Hexawert */
   ascii =
   (hex[0] &gt;= 'A' ? ((hex[0] &amp; 0xdf) - 'A')+10 : (hex[0] - '0'));

   ascii &lt;&lt;= 4; /* Bitverschiebung schneller als ascii*=16 */
   /* zweiter Hexawert */
   ascii +=
   (hex[1] &gt;= 'A' ? ((hex[1] &amp; 0xdf) - 'A')+10 : (hex[1] - '0'));
   return ascii;
}</pre></div>
<p>Sollten Sie die Funktionen wieder in der Praxis testen wollen, können Sie dies tun. Jetzt bekommen Sie die Eingabe des Formulars im Klartext ausgegeben:</p>
<div class="listing"><pre class="prettyprint">Textfeld=Jürgen "pronix" Wolf</pre></div>
<p>Im nächsten Schritt benötigen Sie eine Funktion, die diese beiden Werte auseinanderhält und zwischenspeichert. In diesem Beispiel wurde nur eine Variable (<span class="clisting">Textfeld</span>) mit dem Wert (<span class="clisting">Jürgen "pronix" Wolf</span>) verwendet. Die nun folgende Funktion sollte in diesem Zusammenhang allgemeingültig und auch später wiederverwendbar sein. Daher kommen Sie nicht um die Programmierung einer dynamischen Liste herum. Folgende Struktur soll hierfür verwendet werden:</p>
<div class="listing"><pre class="prettyprint">struct CGI_DATEN {
   char *variable;
   char *wert;
   struct CGI_DATEN *next;
};

struct CGI_DATEN *ende = NULL;</pre></div>
<p>Die Daten einer einzelnen CGI-Eingabe werden anhand des <span class="clisting">'='</span>-Zeichens getrennt (<span class="clisting">variable=wert</span>). Somit muss dieses Zeichen auch geparst werden. Und für den Fall (so ist es meistens), dass mehrere Variablen/Werte-Paare übermittelt werden, müssen Sie auch das Zeichen <span class="clisting">'&amp;'</span> parsen, das die Paare voneinander trennt (<span class="clisting">variable1=wert&amp;variable2=wert</span>). Eine Menge Arbeit liegt damit vor Ihnen. Hier sehen Sie die komplette Funktion:</p>
<div class="listing"><pre class="prettyprint">struct CGI_DATEN *erstellen(char *str) {
   char* s;
   char* res;
   /* Irgendwo gibt es auch eine Grenze, hier sind
    * MAX_PAARE erlaubt. */
   char *paare[MAX_PAARE];
   struct CGI_DATEN *ptr_daten = NULL;
   struct CGI_DATEN *ptr_anfang = NULL;
   int i=0, j=0;

   /* Zuerst werden die Variablen/Werte-Paare anhand
    * des Zeichens '&amp;' getrennt, sofern es mehrere sind. */
   s=str;
   res=strtok(s,"&amp;");
   while( res != NULL &amp;&amp; i &lt; MAX_PAARE) {
      /* Wert von res dynamisch in char **pair speichern. */
      paare[i] = (char *)malloc(strlen(res)+1);
      if(paare[i] == NULL)
         return NULL;
      paare[i] = res;
      res=strtok(NULL,"&amp;");
      i++;
   }

   /* Jetzt werden die Variablen von den Werten getrennt und
    * an die Struktur CGI_DATEN übergeben. */
   while ( i &gt; j ) { /* Das erste Element? */
      if(ptr_anfang == NULL) {
         ptr_anfang =(struct CGI_DATEN *)
           malloc(sizeof (struct CGI_DATEN *));
         if( ptr_anfang == NULL )
            return NULL;
         res = strtok( paare[j], "=");
         ptr_anfang-&gt;variable = malloc(strlen(res)+1);
         if( ptr_anfang-&gt;variable == NULL )
            return NULL;
         ptr_anfang-&gt;variable = res;
         res = strtok(NULL, "\0");
         ptr_anfang-&gt;wert = malloc(strlen(res)+1);
         if( ptr_anfang-&gt;wert == NULL )
            return NULL;
         ptr_anfang-&gt;wert = res;
         /* printf("%s %s&lt;br&gt;",
          * ptr_anfang-&gt;variable, ptr_anfang-&gt;wert); */
         ptr_anfang-&gt;next = malloc(sizeof (struct CGI_DATEN *));
         if(ptr_anfang-&gt;next == NULL)
            return NULL;
         ptr_daten = ptr_anfang-&gt;next;
         j++;
      }
      else { /* die restlichen Elemente */
         res = strtok( paare[j], "=");
         ptr_daten-&gt;variable = malloc(strlen(res)+1);
         if(ptr_daten-&gt;variable == NULL)
            return NULL;
         ptr_daten-&gt;variable = res;
         res = strtok(NULL, "\0");
         ptr_daten-&gt;wert = malloc(strlen(res)+1);
         if(ptr_daten-&gt;wert == NULL)
            return NULL;
         ptr_daten-&gt;wert = res;
         /* printf("%s %s&lt;br&gt;",
          * ptr_daten-&gt;variable, ptr_daten-&gt;wert); */
         ptr_daten-&gt;next = malloc(sizeof (struct CGI_DATEN *));
         if( ptr_daten-&gt;next == NULL )
            return NULL;
         ptr_daten = ptr_daten-&gt;next;
         j++;
      }
   }
   ende = ptr_daten;
   /* Anfangsadresse der Liste struct CGI_DATEN zurückgeben */
   return ptr_anfang;
}</pre></div>
<p>Hiermit haben Sie eine Funktion erstellt, die für alle Fälle gerüstet ist. Jetzt benötigen Sie nur noch eine Funktion, die den Speicherplatz der dynamischen Liste wieder freigibt. Diese finden Sie im folgenden Programmbeispiel.</p><br><hr><a name="kommentar"></a><h3>Ihr Kommentar</h3>
                       Wie hat Ihnen das &lt;openbook&gt; gefallen? Wir freuen uns immer über Ihre freundlichen und kritischen Rückmeldungen.
                       <form action="http://www.galileo-press.de/feedback/openbook" method="post" style="text-align: center; margin-top: 10px;"><input type="hidden" name="openbookurl" value="http://openbook.galileocomputing.de/c_von_a_bis_z/023_c_cgi_011.htm"><input type="hidden" name="buchtitel" value="C von A bis Z"><input type="hidden" name="Kapitel" value="23.11 CGI-Eingabe"><table border="0">
<tr>
<td><label for="name">Name</label><br></td>
<td><input type="text" name="name" id="name" size="40"><br></td>
</tr>
<tr>
<td><label for="email">E-Mail</label><br></td>
<td><input type="text" name="email" id="email" size="40"><br></td>
</tr>
<tr>
<td valign="top"><label for="comment">Ihr Kommentar</label><br></td>
<td><textarea name="comment" id="comment" rows="10" cols="40"></textarea><br></td>
</tr>
<tr>
<td>
</td>
<td><input type="submit" value="Kommentar absenden"></td>
</tr>
</table>
</form>
</div></td>
</tr>
</table></td>
</tr>
<tr>
<td width="100%" class="start" colspan="1" height="22" align="center"><table width="100%" border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="25%"><a href="023_c_cgi_010.htm" class="navnav"> &lt;&lt;   zurück</a></td>
<td width="49%"><div align="center"><a class="navnav" href="#">&lt;top&gt;</a></div></td>
<td align="right" width="25%"><div align="right"><a href="023_c_cgi_012.htm" class="navnav">vor   &gt;&gt; </a></div></td>
</tr>
</table></td>
</tr>
</table>
</div></td>
<td width="10" valign="top">&nbsp;&nbsp;</td>
<td width="160" valign="top">
<table border="0" cellpadding="0" cellspacing="0" width="160">
<tr>
<td>
<table border="0" cellpadding="0" cellspacing="0" width="100%">
<tr>
<td class="tbl2" height="20" colspan="2">
&nbsp;<a href="http://www.galileocomputing.de/?GPP=opc3" class="nav">
<strong>Zum Katalog</strong></a>
</td>
</tr>
<tr>
<td valign="top" class="tbl2" width="2">
<img src="common/leer.gif" border="0" height="1" width="1"></td>
<td valign="top">
<table cellspacing="3">
<tr>
<td><a href="http://www.galileocomputing.de/2132?GPP=opc3">
<img src="common/9783836214117_s.gif" width="113" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: C von A bis Z" title="Zum Katalog: C von A bis Z">
<br /><br /><strong>&nbsp;C von A bis Z</strong><br /><img src="common/pfeil_rechts5.gif" border="0" alt="">Jetzt&nbsp;bestellen</a><br /><br />
</td>
</tr>
</table>
</td>
</tr>
</table>
</td>
</tr>
<tr>
<td><img src="common/leer.gif" height="2" width="1" border="0" /></td>
</tr>
<tr>
<td>
<table border="0" cellpadding="0" cellspacing="0" width="100%">
<tr>
<td class="tbl2" height="20" colspan="2"><a href="#kommentar" class="nav"><strong>&nbsp;Ihre Meinung?</strong></a>
</td>
</tr>
<tr>
<td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td>
<td valign="top">
<table cellspacing="3">
<tr>
<td>Wie hat Ihnen das &lt;openbook&gt; gefallen?<br /><a href="#kommentar"><img src="common/pfeil_rechts5.gif" border="0" alt="">Ihre Meinung</a>
<br /><br /></td>
</tr>
</table>
</td>
</tr>
</table>
</td>
</tr>
<tr>
<td><img src="common/leer.gif" height="2" width="1" border="0" /></td>
</tr>
<tr>
<td>
<table border="0" cellpadding="0" cellspacing="0" width="100%">
<tr>
<td class="tbl2" height="20" colspan="2">&nbsp;<a href="http://www.galileocomputing.de/?GPP=opc3" class="nav"><strong>Buchtipps</strong></a></td>
</tr>
<tr> 
<td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/2083?GPP=opc3">
<img src="common/9783836213851_s.gif" width="112" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Einstieg in C++" title="Zum Katalog: Einstieg in C++"><br /><br /><br /><br /><br /><br /><br />&nbsp;Einstieg in C++</a><br /><br /></td>
</tr>
<tr>
<td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/2156?GPP=opc3">
<img src="common/9783836214292_s.gif" width="113" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: C++ von A bis Z" title="Zum Katalog: C++ von A bis Z"><br /><br /><br /><br /><br /><br /><br />&nbsp;C++ von A bis Z</a><br /><br /></td>
</tr>
<tr>
<td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/1299?GPP=opc3">
<img src="common/9783898428392_s.gif" width="113" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: C/C++" title="Zum Katalog: C/C++"><br /><br /><br /><br /><br /><br /><br />&nbsp;C/C++</a><br /><br /></td>
</tr>
<tr>
<td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/1712?GPP=opc3">
<img src="common/9783836211574_s.gif" width="113" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Shell-Programmierung" title="Zum Katalog: Shell-Programmierung"><br /><br /><br /><br /><br /><br /><br />&nbsp;Shell-Programmierung</a><br /><br /></td>
</tr>
<tr>
<td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/2049?GPP=opc3">
<img src="common/9783836213660_s.gif" width="119" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Linux-UNIX-Programmierung" title="Zum Katalog: Linux-UNIX-Programmierung"><br /><br /><br /><br /><br /><br /><br />&nbsp;Linux-UNIX-<br />&nbsp;Programmierung</a><br /><br /></td>
</tr>
<tr>
<td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/2138?GPP=opc3">
<img src="common/9783836214209_s.gif" width="107" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: IT-Handbuch für Fachinformatiker" title="Zum Katalog: IT-Handbuch für Fachinformatiker"><br /><br /><br /><br /><br /><br /><br />&nbsp;IT-Handbuch für <br />&nbsp;Fachinformatiker</a><br /><br /></td>
</tr>
<tr>
<td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/2165?GPP=opc3">
<img src="common/9783836214391_s.gif" width="119" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Ubuntu GNU/Linux" title="Zum Katalog: Ubuntu GNU/Linux"><br /><br /><br /><br /><br /><br /><br />&nbsp;Ubuntu GNU/Linux</a><br /><br /></td>
</tr>
<tr>
<td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/1628?GPP=opc3">
<img src="common/9783836211161_s.gif" width="117" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Coding for Fun" title="Zum Katalog: Coding for Fun"><br /><br /><br /><br /><br /><br /><br /><br />&nbsp;Coding for Fun&nbsp;</a><br /><br /></td>
</tr>
</table></td>
</tr>
<tr>
<td><img src="common/leer.gif" height="2" width="1" border="0" /></td>
</tr>
<tr>
<td>
<table border="0" cellpadding="0" cellspacing="0" width="100%">
<tr>
<td class="tbl2" height="20" colspan="2"><strong>&nbsp;Shopping</strong></td>
</tr>
<tr>
<td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td>
<td valign="top">
<table cellspacing="3">
<tr>
<td><b>Versandkostenfrei</b> bestellen in Deutschland und &Ouml;sterreich<br /><a href="http://www.galileocomputing.de/hilfe/Shop/?GPP=opc3"><img src="common/pfeil_rechts5.gif" border="0" alt="Info">Info</a><br /><br /></td>
</tr>
</table>
</td>
</tr>
</table>
</td>
</tr>
</table>
</td>
</tr>
</table><br><br><hr width="70%" align="center">
<div align="center">
<p class="standard"><strong>Copyright © Galileo Press 2009</strong><br>
        Für Ihren privaten Gebrauch dürfen Sie die Online-Version natürlich ausdrucken.
        Ansonsten unterliegt das &lt;openbook&gt; denselben Bestimmungen, wie die
        gebundene Ausgabe: Das Werk einschließlich aller seiner Teile ist urheberrechtlich
        geschützt. Alle Rechte vorbehalten einschließlich der Vervielfältigung, Übersetzung,
        Mikroverfilmung sowie Einspeicherung und Verarbeitung in elektronischen Systemen.</p><br><a href="http://www.galileocomputing.de/">[Galileo Computing]</a><br><br>
      Galileo Press, Rheinwerkallee 4, 53227 Bonn, Tel.: 0228.42150.0, Fax 0228.42150.77, <a href="mailto:info@galileo-press.de">info@galileo-press.de</a></div><br><br></body>
</html>
